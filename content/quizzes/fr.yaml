levels:
    1:
        1:
            question_text: Comment s'appelle ce langage de programmation ?
            mp_choice_options:
            -   option: Hedy
                feedback: Bien joué !
            -   option: Heddy
                feedback: Ce n'est pas exactement cela !
            -   option: Haydie
                feedback: Ce n'est pas cela !
            -   option: Heidi
                feedback: Ce n'est pas cela !
            hint: Il a été nommé d'après Hedy Lamarr.
            correct_answer: A
            question_score: '10'
        2:
            question_text: Comment remplir ce code pour fait apparaître le texte Bonjour ! ?
            code: _ Bonjour !
            mp_choice_options:
            -   option: '`{echo}`'
                feedback: '`{echo}` répète une réponse donnée.'
            -   option: '`{print}`'
                feedback: Correct !
            -   option: '`Bonjour`'
                feedback: Bonjour n'est pas une commande.
            -   option: '`{ask}`'
                feedback: Avec `{ask}`, tu peux poser une question.
            hint: _ Bonjour le monde !
            correct_answer: B
            question_score: '10'
        3:
            question_text: Comment demander à quelqu'un quelle est sa couleur préférée ?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Quelle est ta couleur favorite ?
                    ```
                feedback: '`{print}` affiche du texte, mais il ne pose pas de questions.'
            -   option: |-
                    ```
                    {ask} {print} Quelle est ta couleur préférée ?
                    ```
                feedback: Tu n'as besoin que d'une commande, pas de deux.
            -   option: |-
                    ```
                    {ask} Quelle est ta couleur préférée ?
                    ```
                feedback: Parfait !
            -   option: |-
                    ```
                    {echo} Quelle est ta couleur préférée ?
                    ```
                feedback: '`{echo}` te répète la réponse que tu as donnée.'
            hint: Tu peux demander quelque chose avec la commande `{ask}`
            correct_answer: C
            question_score: '10'
        4:
            question_text: Quel est le problème avec ce code ?
            code: |-
                Bonjour je mappelle Hedy
                {ask} Qui est tu ?
                {echo} Bonjour...
            mp_choice_options:
            -   option: Il manque la commande `{print}` à la ligne 1.
                feedback: C'est ça !
            -   option: La commande de la ligne 2 est mal orthographiée.
                feedback: La commande est correctement orthographiée.
            -   option: '`{echo}` n''est pas une commande.'
                feedback: '`{echo}` est une commande, ce n''est pas cela l''erreur.'
            -   option: Rien ! C'est un code parfait !
                feedback: Faux. Regarde bien !
            hint: La ligne 1 ne semble pas correcte
            correct_answer: A
            question_score: '10'
        5:
            question_text: Quelle commande manque à la ligne 2 ?
            code: |-
                {ask} Quel est ton animal préféré ?
                _ Donc ton animal préféré est…
            mp_choice_options:
            -   option: '`{print}`'
                feedback: Non, tu veux que la réponse te soit répétée.
            -   option: '`Hedy`'
                feedback: Hedy n'est pas une commande.
            -   option: '`{ask}`'
                feedback: Avec `{ask}`, tu peux poser une question.
            -   option: '`{echo}`'
                feedback: C'est ça !
            hint: Tu veux voir la réponse à la fin de la ligne 2...
            correct_answer: D
            question_score: '10'
        6:
            question_text: Quel est le problème avec ce code ?
            code: |-
                {print} je mappelle Hedy
                {print} Quel sport prefere tu ?
                {echo} Tu preferes...
                {print} Cool ! Moi aussi !
            mp_choice_options:
            -   option: À la ligne 1, `{print}` doit être remplacé par `{ask}`.
                feedback: Le `{print}` dans la ligne 1 est correct.
            -   option: À la ligne 2, `{print}`  doit être remplacé par `{ask}`.
                feedback: Super ! Tu as été attentif !
            -   option: La ligne 3 doit commencer par `{print}` au lieu de `{echo}`.
                feedback: '`{echo}` est correct.'
            -   option: À la ligne 4, `{print}` est mal orthographié.
                feedback: Non, il y a une faute d'orthographe quelque part ailleurs
            hint: Vérifie les commandes `{print}`.
            correct_answer: B
            question_score: '10'
        7:
            question_text: Quel est le problème avec ce code ?
            code: |-
                {print} Bienvenue au restaurant d Hedy !
                {ask} Que veux-tu manger ?
                {echo} Donc tu veux commander ...
                {print} Tout de suite !
            mp_choice_options:
            -   option: À la ligne 1, `{print}` doit être remplacé par `{ask}`
                feedback: Tu es sûr que quelque chose ne va pas ?
            -   option: À la ligne 1 `{print}` doit être remplacé par `{echo}`
                feedback: Tu es sûr que quelque chose ne va pas ?
            -   option: À la ligne 3, il faut remplacer `{echo}` par `{print}`
                feedback: Tu es sûr que quelque chose ne va pas ?
            -   option: Rien ! C'est un code parfait !
                feedback: Exact !
            hint: Vérifie le code ligne par ligne
            correct_answer: D
            question_score: '10'
        8:
            question_text: Comment utiliser la commande `{echo}` ?
            mp_choice_options:
            -   option: On peut utiliser `{ask}` pour poser une question.
                feedback: C'est ce que fait la commande `{ask}`!
            -   option: Tu peux l'utiliser comme `{print}`.
                feedback: C'est ce que fait la commande `{print}` !
            -   option: Tu peux l'utiliser pour répéter une réponse.
                feedback: Bon travail !
            -   option: Tu peux l'utiliser pour faire disparaître du texte.
                feedback: Ce n'est pas correct...
            hint: '`{echo}` est utilisé après une commande `{ask}`.'
            correct_answer: C
            question_score: '10'
        9:
            question_text: Quel est le problème avec ce code ?
            code: |-
                {print} Bonjour !
                {print} Comment vas-tu ?
                {echo} Alors tu vas ...
            mp_choice_options:
            -   option: Le `{print}` à la ligne 1 devrait être `{ask}`
                feedback: Non, il faut bien un `{print}` ici . Où est posée la question ?
            -   option: Le `{print}` à la ligne 2 devrait être `{ask}`
                feedback: Super !
            -   option: '`{echo}` à la ligne 3 devrait être `{ask}`'
                feedback: Non, il faut bien un `{echo}` ici ! Où est posée la question ?
            -   option: Rien. C'est un code parfait !
                feedback: Cherches bien l'erreur...
            hint: '`{ask}` te permet de poser une question'
            correct_answer: B
            question_score: '10'
        10:
            question_text: Quelle sortie sera affichée par ce code ?
            code: |-
                {ask} Es-tu prêt pour aller au niveau 2 ?
                {echo}
                {echo}
            mp_choice_options:
            -   option: Are you ready to go to level 2?
                feedback: Il y a deux commandes `{echo}`
            -   option: |-
                    Yes!
                    Yes!
                feedback: Great job!
            -   option: Yes!
                feedback: Il y a deux commandes `{echo}`
            -   option: |-
                    Are you ready to go to level 2?
                    Yes!
                feedback: Il y a deux commandes `{echo}`
            hint: Let's go!
            correct_answer: B
            question_score: '10'
    2:
        1:
            question_text: Quelle affirmation est vraie ?
            mp_choice_options:
            -   option: Tu peux utiliser la commande `{print}` pour poser des questions.
                feedback: C'est a ça que demande sert
            -   option: Tu peux utiliser la commande `{ask}` pour afficher les réponses.
                feedback: Ce n'est pas vrai
            -   option: Avec la commande `{print}` tu peux faire apparaître du texte
                feedback: Bien
            -   option: Avec la commande {sleep}, tu peux supprimer du texte de l'écran.
                feedback: '`{sleep}` ne fonctionne pas comme ça.'
            hint: '`{print}` fonctionne toujours de la même manière qu''au niveau 1.'
            correct_answer: C
            question_score: '10'
        2:
            question_text: Quel code est correct ?
            mp_choice_options:
            -   option: |-
                    ```
                    name {is} {ask} Quel est ton nom ?
                    ```
                feedback: Super !
            -   option: |-
                    ```
                    {ask} {is} name Quel est ton nom ?
                    ```
                feedback: Les mots sont justes, l'ordre ne l'est pas !
            -   option: |-
                    ```
                    {ask} Quel est ton nom ?
                    ```
                feedback: Cela a fonctionné au niveau 1, mais au niveau 2 et plus, cela fonctionne différemment.
            -   option: |-
                    ```
                    {ask} Quel est ton nom ? {is} nom
                    ```
                feedback: Les mots sont justes, l'ordre ne l'est pas !
            hint: '`{ask}` ne fonctionne pas comme au niveau 1'
            correct_answer: A
            question_score: '10'
        3:
            question_text: Qu'est-ce qui apparaît sur ton écran de sortie lorsque tu lances ce code ?
            code: |-
                nom {is} Marion
                {print} nom va au marché et elle achète une pomme.
            mp_choice_options:
            -   option: nom va au marché et elle achète une pomme.
                feedback: Le mot nom est remplacé par Marion
            -   option: Marion va au marché.
                feedback: La deuxième partie de la phrase n'est pas absente !
            -   option: Marion va au marché et elle achète une pomme.
                feedback: Bien joué !
            -   option: Marion va au marché et Marion achète une pomme.
                feedback: '''elle'' n''est pas remplacée par le nom'
            hint: Le mot nom est remplacé par 'Marion'
            correct_answer: C
            question_score: '10'
        4:
            question_text: Que verras-tu sur l'écran de sortie lorsque tu lances ce code ?
            code: |-
                nom {is} Hedy
                {print} Salut mon nom est nom !
            mp_choice_options:
            -   option: Salut mon nom est nom
                feedback: La variable nom est remplacé par Hedy
            -   option: Salut mon nom est Hedy
                feedback: La variable nom est remplacé par Hedy
            -   option: Salut mon Hedy est nom
                feedback: La variable nom est remplacé par Hedy
            -   option: Salut mon Hedy est Hedy
                feedback: Correct, ce problème sera corrigé dans le niveau 4 !
            hint: Le mot 'nom' est remplacé par 'Hedy' aux deux endroits
            correct_answer: D
            question_score: '10'
        5:
            question_text: Que se passe-t-il lorsque tu utilises la commande `{sleep}` ?
            mp_choice_options:
            -   option: Il ralentit ton ordinateur
                feedback: heureusement, non !
            -   option: Il ferme Hedy
                feedback: heureusement, non !
            -   option: Votre programme se met en pause pendant une seconde puis continue
                feedback: C'est vrai !
            -   option: On le met à la fin pour qu'Hedy sache que ton programme est terminé
                feedback: Non, ce serait inutile à la fin de ton code
            hint: L'ordinateur attend une seconde à la commande `{sleep}`
            correct_answer: C
            question_score: '10'
        6:
            question_text: Que doit-il y avoir sur les lignes ?
            code: |-
                {print} Et le prix du meilleur langage de programmation revient à…
                _
                {print} Hedy !
            mp_choice_options:
            -   option: '`{sleep}`'
                feedback: Parfait !
            -   option: '`{echo}`'
                feedback: Il n'y a rien à répéter ici
            -   option: '`{print}`'
                feedback: Il n'y a pas de texte à afficher avec `{print}` à cet endroit
            -   option: '`{ask}`'
                feedback: Il n'y a pas de question à poser ici
            hint: Pause pour effet dramatique...
            correct_answer: A
            question_score: '10'
        7:
            question_text: Quelle commande doit être utilisée sur la ligne 2 ?
            code: |-
                {print} Je vais exploser dans 3 secondes !
                _
                {print} BOOM !
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 3
                    ```
                feedback: Tu n'as pas besoin de `{print}`
            -   option: |-
                    ```
                    {sleep} 3
                    ```
                feedback: Parfait !
            -   option: |-
                    ```
                    {sleep}
                    ```
                feedback: De cette façon, la bombe explosera dans une seconde
            -   option: |-
                    ```
                    {sleep} {sleep} {sleep}
                    ```
                feedback: C'est plus simple avec le chiffre 3
            hint: Tu veux que l'ordinateur attende 3 secondes
            correct_answer: B
            question_score: '10'
        8:
            question_text: Comment corriger la première ligne de code ?
            code: |-
                {ask} {is} Quel âge as-tu ?
                {print} age
            mp_choice_options:
            -   option: |-
                    ```
                    age {ask} {is} Quel âge as-tu ?
                    ```
                feedback: Ce n'est pas le bon ordre !
            -   option: |-
                    ```
                    {ask} {is} age Quel âge as-tu ?
                    ```
                feedback: Ce n'est pas le bon ordre !
            -   option: |-
                    ```
                    age {is} {ask} Quel âge as-tu ?
                    ```
                feedback: Tu as compris !
            -   option: |-
                    ```
                    age {is} Quel âge as-tu ?
                    ```
                feedback: Où est la commande `{ask}` ?
            hint: Le nom de la variable doit venir en premier
            correct_answer: C
            question_score: '10'
        9:
            question_text: Qu'est-ce qui ne va pas dans ce code ?
            code: |-
                chiens {is} animal
                {print} Jaime les animaux
            mp_choice_options:
            -   option: 'La ligne 1 devrait dire : chiens is animal'
                feedback: Le nom de la variable est animaux
            -   option: 'La ligne 1 devrait dire : animaux is chiens'
                feedback: Bien !
            -   option: 'La ligne 2 devrait dire : print Jaime les animals'
                feedback: Le nom de la variable est animaux
            -   option: 'La ligne 2 devrait dire : sleep Jaime les animaux'
                feedback: Sleep n'est pas utilisé pour `{print}` du texte
            hint: Tu veux `{print}` 'J aime les chiens'
            correct_answer: B
            question_score: '10'
        10:
            question_text: Quelle commande doit être utilisée sur la ligne 1 ?
            code: |-
                gout {is} _
                {print} Ta glace préférée est…
                {sleep}
                {print} gout
            mp_choice_options:
            -   option: sleep 3
                feedback: Tu veux connaître la saveur préférée !
            -   option: print fraises
                feedback: Tu ne veux pas `{print}` au milieu de la ligne...
            -   option: fraises, chocolat, vanille
                feedback: Si tu fait cela, tu feras une liste. Tu ne veux pas de ça maintenant.
            -   option: |-
                    ```
                    {ask} Quel parfum de glace aimes-tu ?
                    ```
                feedback: C'est juste !
            hint: Tu veux `{ask}` une question
            correct_answer: D
            question_score: '10'
    3:
        1:
            question_text: Quelle commande(s) utiliser pour laisser Hedy choisir quelque chose arbitrairement ?
            mp_choice_options:
            -   option: '`{print}`'
                feedback: '`{print}` est utilisé pour afficher du texte'
            -   option: '`{ask}`'
                feedback: '`{ask}` est utilisé pour poser une question'
            -   option: '`{is}`'
                feedback: '`{is}` est utilisé pour faire une liste'
            -   option: '`{at}` `{random}`'
                feedback: C’est bien ça !
            hint: Arbitrairement signifie au hasard.
            correct_answer: D
            question_score: '10'
        2:
            question_text: Quel est le problème avec ce code ?
            code: |-
                animaux {is} chien chat vache
                {print} animaux {at} {random}
            mp_choice_options:
            -   option: 'Il faut des virgules à la ligne 1 : chien, chat, vache.'
                feedback: Bon travail !
            -   option: La ligne 1 doit commencer par print.
                feedback: Non, tu n'as pas besoin de `{print}`
            -   option: À la ligne 2, il faut dire 'animal' au lieu de 'animaux'
                feedback: animaux is correct.
            -   option: at random est mal écrit, il devrait être à ramdon
                feedback: '`{at} {random}` est l''orthographe correcte'
            hint: Il y a un problème à la ligne 1
            correct_answer: A
            question_score: '10'
        3:
            question_text: Comment corriges-tu l'erreur de la ligne 2 ?
            code: |-
                options {is} pierre, feuille, ciseaux
                {print} pierre, feuille, ciseaux {at} {random}
            mp_choice_options:
            -   option: at random print options
                feedback: Tu y es presque. L'ordre des mots n'est pas encore correct.
            -   option: print pierre at random
                feedback: tu ne veux pas toujours qu'Hedy {print} pierre, parfois tu veux feuille ou ciseaux.
            -   option: print options at random
                feedback: Très bien !
            -   option: Pas besoin, le code est correct !
                feedback: Cherche bien l'erreur
            hint: La variable (la liste) est appelée options.
            correct_answer: C
            question_score: '10'
        4:
            question_text: Que faut-il changer dans la ligne pour afficher un coût aléatoire ?
            code: |-
                coûts is 1 euro, 100 euros, 1 million euros
                print coût at random
            mp_choice_options:
            -   option: print coût
                feedback: tu ne veux pas afficher le mot 'coût', mais tu veux afficher un coût tiré au hasard dans ta liste
            -   option: print coûts at random
                feedback: Super ! Tu as vraiment fait attention.
            -   option: print at random coût
                feedback: Tu y es presque. L'ordre des mots n'est pas encore correct.
            -   option: Rien, ce code est correct.
                feedback: Cherche bien l'erreur que tu as manquée !
            hint: Le nom de la variable est coûts
            correct_answer: B
            question_score: '10'
        5:
            question_text: Qu'est-ce qui ne va pas dans ce code ?
            code: |-
                question {is} {ask} Qu'est-ce que tu veux savoir ?
                {print} question
                reponses {is} oui, non, peut-être
                print reponses {at} {random}
            mp_choice_options:
            -   option: La ligne 1 doit dire `print` au lieu de `ask`
                feedback: Non, ce n'est pas faux.
            -   option: La ligne 2 doit dire `{ask}` au lieu de `{print}`
                feedback: Non, ce n'est pas faux...
            -   option: La ligne 2 doit indiquer les réponses `{at} {random}` `{is}` oui, non, peut-être
                feedback: Non, ce n'est pas faux...
            -   option: Rien, ce code est parfait
                feedback: C'est bien ça !
            hint: Ce code a-t-il une erreur ?
            correct_answer: D
            question_score: '10'
        6:
            question_text: Quel est le problème avec ce code ?
            code: |-
                question {is} {ask} Qu'est-ce que tu veux savoir ?
                reponses oui, non, peut-être
                {print} reponses {at} {random}
            mp_choice_options:
            -   option: La ligne 2 doit être 'question' au lieu de 'réponse'
                feedback: Non, ce n'est pas ça
            -   option: La ligne 2 doit être is au lieu de are
                feedback: Correct !
            -   option: La ligne 3 doit être 'réponses' au lieu de 'réponse'
                feedback: Non, la variable s'appelle bien 'réponse'
            -   option: Rien ! Ce code est génial !
                feedback: En fait, la ligne 2 comporte une erreur.
            hint: Il y a quelque chose qui ne va pas avec la ligne 2.
            correct_answer: B
            question_score: '10'
        7:
            question_text: Que fait la commande `{add}` ?
            code: |-
                books is Harry Potter, The Hobbit, Green Eggs and Ham
                your_book is ask What is your favorite book?
                add your_book to books
                print books at random
            mp_choice_options:
            -   option: The add command removes a random book from the list
                feedback: La commande remove supprime, la commande add ajoute
            -   option: The add command adds a random book to a list
                feedback: Ce n'est pas le cas. Elle ajoute ta réponse à la liste !
            -   option: The add command adds your favotite book to the list
                feedback: Correct !
            -   option: The add command prints your favorite book.
                feedback: Non, elle ajoute ton livre préféré à la liste
            hint: La commande `{add}` ajoute un livre, mais lequel ?
            correct_answer: C
            question_score: '10'
        8:
            question_text: Quelle est la sortie de ce code ?
            code: |-
                chips {is} sel de mer, paprika, crème aigre
                {remove} sel de mer {from} chips
                {remove} paprika {from} chips
                {print} chips {at} {random}
            mp_choice_options:
            -   option: You can't tell, because Hedy will print one of the 3 flavors at random
                feedback: Jettes un coup d'œil aux commandes `{remove}`
            -   option: sel de mer
                feedback: sel de mer est retiré de la liste
            -   option: paprika
                feedback: Paprika est retiré de la liste
            -   option: crème aigre
                feedback: C'est bien ça !
            hint: Il y a 3 parfums, 2 sont retirés. Lequel reste-t-il ?
            correct_answer: D
            question_score: '10'
        9:
            question_text: Quel est le problème avec ce code ?
            code: |-
                couleurs {is} bleu, violet, vert
                couleur_choisie {is} {ask} Quelle couleur de cheveux n’aimeriez-vous pas avoir?
                {remove} couleur_choisie {from} couleurs
                {print} Je vais teindre ma couleur de cheveux {at} {random}
            mp_choice_options:
            -   option: 'La ligne 3 devrait indiquer : `{remove}` bleu `{from}` couleurs'
                feedback: Mais tu veux peut-être des cheveux bleus !
            -   option: La ligne 3 devrait avoir une commande `{add}` au lieu de la commande `{remove}`
                feedback: Tu veux supprimer la couleur choisie donc `{remove}` est correct.
            -   option: À la ligne 4, la variable doit être appelée couleurs au lieu de couleur.
                feedback: Bon travail !
            -   option: Rien, c'est un code correct !
                feedback: Trouves l'erreur !
            hint: Regardes la ligne 3
            correct_answer: C
            question_score: '10'
        10:
            question_text: Que devrait-il y avoir sur le _ ?
            code: |-
                promeneurs {is} papa, maman, Sam, Petra
                promeneur_hier {is} {ask} Qui a promené les chiens hier ?
                {print} promeneur_hier ne devrait pas avoir à promener les chiens encore aujourd'hui
                _
                {print} promeneurs {at} {random}, c'est ton tour de promener les chiens !
            mp_choice_options:
            -   option: |-
                    ```
                    {remove} promeneur_hier {from} promeneurs
                    ```
                feedback: Super !
            -   option: |-
                    ```
                    {remove} promeneur hier {to} promeneurs
                    ```
                feedback: '`{remove} {from}` ou `{add} {to}`, et non pas `{remove} {to}`'
            -   option: |-
                    ```
                    {remove} promeneurs {from} hier
                    ```
                feedback: hier n'est pas une variable
            -   option: |-
                    ```
                    {add} promeneur_hier {to} promeneurs
                    ```
                feedback: Cela va faire que la personne qui a promené hier va avoir plus de chance de le refaire. C'est pas très gentil pour elle.
            hint: La personne qui a promené les chiens hier devrait être retirée de la liste.
            correct_answer: A
            question_score: '10'
    4:
        1:
            question_text: Laquelle de ces réponses est correcte ?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Je suis très excité à l'idée de répondre à ce quiz!'
                    ```
                feedback: C'est exact !
            -   option: |-
                    ```
                    {print} Je suis très excité à l'idée de répondre à ce quiz!
                    ```
                feedback: '`{ask}` a aussi besoin de guillemets !'
            -   option: |-
                    ```
                    {print} 'Je suis très excité à l'idée de répondre à ce quiz!'
                    ```
                feedback: '`{at} {random}` fonctionne encore'
            -   option: |-
                    ```
                    {print} 'Je suis très excité à l'idée de répondre à ce quiz!'
                    ```
                feedback: Non, mais 2 autres commandes en ont besoin.
            hint: Au niveau 4, il y 2 commandes qui ont besoin de guillemets.
            correct_answer: A
            question_score: '10'
        2:
            question_text: Quel code utilise les bons guillemets ?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} `bonjour`
                    ```
                feedback: Ce guillemet est de travers, il en faut un droit.
            -   option: |-
                    ```
                    {print} 'bonjour'
                    ```
                feedback: C’est bien ça
            -   option: |-
                    ```
                    {print} bonjour
                    ```
                feedback: Il n'y a pas de guillemets ici!
            -   option: |-
                    ```
                    {print} ,bonjour,
                    ```
                feedback: C'est une virgule, tu as besoin de guillemets.
            hint: Choisis les bons guillemets.
            correct_answer: B
            question_score: '10'
        3:
            question_text: Où es-ce que les guillemets sont correctement utilisés ?
            mp_choice_options:
            -   option: |-
                    ```
                    {print} Salut je suis Hedy
                    ```
                feedback: Ajoutes des guillements s'il te plait !
            -   option: |-
                    ```
                    {print} 'Salut je suis Hedy
                    ```
                feedback: Il doit y avoir un guillemet avant et après ce que tu veux afficher.
            -   option: |-
                    ```
                    '{print} Salut je suis Hedy'
                    ```
                feedback: Le premier guillemet doit se trouver après le mot `{print}`
            -   option: |-
                    ```
                    {print} 'Salut je suis Hedy'
                    ```
                feedback: Parfait !
            hint: Les mots que tu veux afficher doivent être précédés et suivis d'un guillemet.
            correct_answer: D
            question_score: '10'
        4:
            question_text: Laquelle de ces réponses est vraie ?
            mp_choice_options:
            -   option: 'Tu as besoin de guillemets autour du mot `{print}`, comme ceci : `''{print}''`.'
                feedback: Les guillemets ne doivent pas entourer la commande elle-même.
            -   option: Tu dois mettre des guillemets autour des mots que tu veux afficher.
                feedback: Super !
            -   option: Tu n'as pas besoin de guillemets lorsque tu utilise la commande `{ask}`
                feedback: '`{print}` et `{ask}` requièrent des guillemets'
            -   option: Tu peux choisir toi-même d'utiliser ou non des guillemets.
                feedback: Malheureusement, Hedy est plus strict que ça.
            hint: À partir du niveau 4, tu dois utiliser des guillemets.
            correct_answer: B
            question_score: '10'
        5:
            question_text: Qu'est-ce qui doit être changé pour que le code fonctionne ?
            code: |-
                options {is} pierre, feuille, ciseaux
                {print} 'options {at} {random}'
            mp_choice_options:
            -   option: |-
                    ```
                    '{print} options {at} {random}'
                    ```
                feedback: N'utilise jamais de guillemets avant la commande `{print}`.
            -   option: |-
                    ```
                    {print} 'options' {at} {random}
                    ```
                feedback: options est une variable. Tu ne souhaites pas afficher 'options {at} {random}'.
            -   option: |-
                    ```
                    {print} options {at} {random}
                    ```
                feedback: C’est juste
            -   option: Rien, le jeu fonctionne déjà !
                feedback: Regardes bien. Il y a une erreur.
            hint: Tu ne veux pas qu'Hedy affiche littéralement 'options {at} {random}', tu veux qu'elle affiche 'pierre' ou 'feuille' ou 'ciseaux'.
            correct_answer: C
            question_score: '10'
        6:
            question_text: Quelle serait la prochaine ligne de ce code ?
            code: prix {is} 1 euro, 100 euros, 1 million euros
            mp_choice_options:
            -   option: |-
                    ```
                    {print} 'Tu gagnes...' prix {at} {random}
                    ```
                feedback: Super ! Tu as compris !
            -   option: |-
                    ```
                    {print} Tu gagnes... 'prix {at} {random}'
                    ```
                feedback: Hedy va afficher 'prix {at} {random}'
            -   option: |-
                    ```
                    {print} Tu gagnes... prix {at} {random}
                    ```
                feedback: Tu as besoin de guillemets !
            -   option: |-
                    ```
                    {print} 'Tu gagnes... prix {at} {random}'
                    ```
                feedback: Hedy va afficher 'prix{at} {random}''
            hint: 'Réfléchis bien : qu''est-ce qui est une variable et doit être en dehors des guillemets ? Et quels sont les mots normaux qui doivent être à l''intérieur ?'
            correct_answer: A
            question_score: '10'
        7:
            question_text: Quel est le problème avec ce code ?
            code: |-
                question {is} {ask} Que veux-tu savoir ?
                reponses {is} oui, non, peut-être
                {print} reponses {at} {random}
            mp_choice_options:
            -   option: Les guillemets sont manquants à la ligne 1
                feedback: Correct !
            -   option: Les guillemets sont manquants à la ligne 2
                feedback: Une variable n'a pas besoin de guillemets
            -   option: Les guillemets sont manquants à la ligne 3
                feedback: Tu ne veux pas qu'Hedy affiche littéralement 'reponses {at} {random}', donc pas besoin de guillemets ici !
            -   option: Rien, le code est bien comme ça !
                feedback: Regardes bien. Tu as loupé une erreur !
            hint: Vérifies chaque ligne pour savoir si elle a besoin de guillemets ou pas.
            correct_answer: A
            question_score: '10'
        8:
            question_text: Quelle serait la prochaine ligne à ajouter à ce code ?
            code: |-
                {print} 'Bienvenue au monty hall !'
                {print} 'Il y a 3 portes devant toi !'
                porte {is} {ask} 'Quelle est la porte que tu choisis !'
            mp_choice_options:
            -   option: print Donc tu choisis la porte porte
                feedback: Il faut des guillemets
            -   option: print 'Donc tu choisis la 'porte porte
                feedback: Si le joueur choisit la porte 3, Hedy dira 'Donc tu choisis 3 3
            -   option: print 'Donc tu choisis la porte' porte
                feedback: Super !
            -   option: print 'Donc tu choisis la porte porte'
                feedback: Hedy affichera 'Donc tu choisis la porte porte
            hint: Le deuxième mot 'porte' devrait être remplacé par le numéro, le premier devrait toujours être le mot 'porte'...
            correct_answer: C
            question_score: '10'
        9:
            question_text: Qu'est-ce qui ne pourra pas être affiché sur ton écran de sortie ?
            code: |-
                clubs {is} Real Madrid, Bayern Munchen, Manchester United, Ajax
                {print} clubs {at} {random} ' va gagner la ligue des champions'
            mp_choice_options:
            -   option: chocolat est ma glace préférée
                feedback: Hedy pourrait `{print}`er ça
            -   option: fraise vanille est ma glace préférée
                feedback: Hedy pourrait `{print}`r ça
            -   option: Le Bayern Munich va gagner la ligue des champions
                feedback: Hedy pourrait `{print}`r ça
            -   option: fraise est ma glace préférée
                feedback: C'est vrai. Cette option n'est pas dans la liste
            hint: Quelles sont les options parmis lesquelles Hedy peut choisir au hasard?
            correct_answer: D
            question_score: '10'
        10:
            question_text: Quelle affirmation est vraie ?
            code: |-
                personnes {is} maman, papa, Emma, Sophie
                {print} La vaisselle est faite par...
                {print} personnes {at} {random}
            mp_choice_options:
            -   option: Les guillemets manquent à la ligne 1
                feedback: Une liste n'a pas besoin de guillemets
            -   option: Les guillemets manquent à la ligne 2
                feedback: Correct
            -   option: Les guillemets sont absents aux lignes 2 et 3
                feedback: La ligne 3 n'a pas besoin de guillemets, car elle n'est pas affichée littéralement.
            -   option: Rien, ce code n'a pas d'erreurs
                feedback: Tu en as loupé une !
            hint: Regarde bien les guillemets !
            correct_answer: B
            question_score: '10'
    5:
        1:
            question_text: Quelle commande devrait être remplie avec le _ ?
            code: |-
                nombre {is} {ask} 'Quel est ton nombre porte bonheur ?'
                {if} nombre {is} 5 {print} 'Pareil !'
                _ {print} 'Mon nombre porte bonheur est le 5 !'
            mp_choice_options:
            -   option: '`{print}`'
                feedback: Il y a déjà une commande `{print}`.
            -   option: '`{if}`'
                feedback: La commande `{if}` est utlisée sur la ligne au dessus.
            -   option: '`{sleep}`'
                feedback: Non ce n'est pas ça !
            -   option: '`{else}`'
                feedback: C'est exact !
            hint: Laquelle va avec la commande `{if}` ?
            correct_answer: D
            question_score: '10'
        2:
            question_text: Qu'est-ce qui s'affichera lorsque tu tapes le nom Hedy ?
            code: |-
                nom {is} {ask} 'Quel est ton nom?'
                {if} nom {is} Hedy {print} 'fun' {else} {print} 'mouais'
            mp_choice_options:
            -   option: fun
                feedback: Correct !
            -   option: mouais
                feedback: Si le nom est Hedy, il dira "fun"
            -   option: Hedy
                feedback: Non, cela n'affichera pas le nom
            -   option: Erreur
                feedback: Heureusement, non !
            hint: '`{if}` nom `{is}` Hedy `{print}` ... ?'
            correct_answer: A
            question_score: '10'
        3:
            question_text: Quel est le bon mot de passe ?
            code: |-
                secret {is} {ask} 'Quel est le mot de passe ?'
                {if} secret {is} SECRET {print} 'Correct !'
                {else} {print} 'ALERTE ! INTRUSION !'
            mp_choice_options:
            -   option: Correct !
                feedback: Ceci est le texte qui sera affiché si tu as le bon mot de passe
            -   option: SECRET
                feedback: Correct !
            -   option: secret
                feedback: Le mot de passe n'est pas secret...
            -   option: ALERTE INTRUSION
                feedback: Ceci est le texte qui sera affiché si tu n'as pas le bon mot de passe !
            hint: '`{if}` secret `{is}` ... `{print}` ''Correct !'''
            correct_answer: B
            question_score: '10'
        4:
            question_text: Qu'est-ce qu'Hedy affiche quand tu tapes le mauvais mot de passe ?
            code: |-
                secret {is} {ask} 'Quel est le mot de passe ?'
                {if} secret {is} SECRET {print} 'Correct !'
                {else} {print} 'ALERTE ! INTRUSION !'
            mp_choice_options:
            -   option: Correct
                feedback: Ceci est le texte qui sera affiché si tu as la bonne réponse...
            -   option: SECRET
                feedback: Ce n'est pas la bonne réponse
            -   option: Faux !
                feedback: Non, ce n'est pas ce qu'Hedy affichera
            -   option: ALERTE ! INTRUSION !
                feedback: Bien joué !
            hint: L'ordinateur déclenchera l'alarme en cas d'intrusion !
            correct_answer: D
            question_score: '10'
        5:
            question_text: Pourquoi Hedy dira 'ALARME ! INTRUSION !' si tu tapes 'secret' ?
            code: |-
                secret {is} {ask} 'Quel est le mot de passe ?'
                {if} secret {is} SECRET {print} 'Correct !'
                {else} {print} 'ALERTE ! INTRUSION !'
            mp_choice_options:
            -   option: Parce qu'il doit être en majuscules, comme SECRET
                feedback: Bien !
            -   option: Parce que le mot de passe est 'alarme'
                feedback: Non, ce n'est pas le mot de passe.
            -   option: Parce qu'il n'a pas la bonne orthographe.
                feedback: Regarde mieux
            -   option: Parce que Hedy fait erreur
                feedback: Non, Hedy a raison
            hint: L'orthographe du mot doit être exactement la même.
            correct_answer: A
            question_score: '10'
        6:
            question_text: Quel mot devrait être à la place du point d'interrogation dans la dernière ligne ?
            code: |-
                {print} 'Je suis Hedy, la voyante du football !'
                {print} 'Je vais prédire quelle place ton équipe va occuper !'
                club is {ask} 'Quel est ton club préféré ?'
                {if} club {is} Brest {print} 'Le Stade brestois 29 va gagner !'
                _ {print} 'Désolé, ton club va terminer à la dernière place...'
            mp_choice_options:
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: '`{if}` est déjà sur la ligne du dessus'
            -   option: |-
                    ```
                    {at} {random}
                    ```
                feedback: Non, tu as besoin de `{else}`.
            -   option: |-
                    ```
                    {else}
                    ```
                feedback: Bien !
            -   option: |-
                    ```
                    {print}
                    ```
                feedback: '`{print}` est déjà là, il nous faut un mot avant !'
            hint: '`{if}` va avec...?'
            correct_answer: C
            question_score: '10'
        7:
            question_text: Quel mot devrait être à la place du point d'interrogation ?
            code: |-
                {print} 'Je peux prédire si tu seras millionnaire ou pas !'
                prenom {is} {ask} 'Dis moi ton nom..'
                {if} prenom {is} Hedy {print} 'Tu seras millionnaire !'
                {else} _ 'Malheureusement... Pas de grosse fortune pour toi.'
            mp_choice_options:
            -   option: '`{if}`'
                feedback: '`{if}` est déjà sur la ligne juste au-dessus.'
            -   option: '`{at}` `{random}`'
                feedback: Non, tu n'as pas besoin de `{at} {random}`.
            -   option: '`{else}`'
                feedback: Il y a déjà la commande `{else}`
            -   option: '`{print}`'
                feedback: Superbe !
            hint: La commande `{print}` suit le `{else}`
            correct_answer: D
            question_score: '10'
        8:
            question_text: Quel mot devrait être à la place du point d'interrogation ?
            code: |-
                animal {is} {ask} 'Quel est ton animal favori ?'
                {if} _ {is} pingouin {print} 'Cest aussi mon animal préféré !'
                {else} {print} 'Cool ! moi je préfère les pingouins.'
            mp_choice_options:
            -   option: |-
                    ```
                    animal favori
                    ```
                feedback: Ce n'est pas le nom de la variable.
            -   option: |-
                    ```
                    animal
                    ```
                feedback: Excellent travail !
            -   option: '`{if}`'
                feedback: '`{if}`f est déjà là'
            -   option: '`{print}`'
                feedback: Non, ce n'est pas cela.
            hint: Quel est le nom de la variable ?
            correct_answer: B
            question_score: '10'
        9:
            question_text: Quelle porte dois-tu choisir pour t'échapper??
            code: |-
                {print} 'Échappe-toi de la maison hantée !'
                {print} 'Il y a 3 portes devant toi'
                porte {is} {ask} 'Quelle porte choisis-tu ?'
                monstres {is} vampire, loup-garou, araignée géante
                {if} porte {is} 2 {print} 'Bravo, tu peux t échapper !'
                {else} {print} 'Tu es dévoré par un...' monstres {at} {random}
            mp_choice_options:
            -   option: '1'
                feedback: Mauvais choix ! Tu as été mangé
            -   option: '2'
                feedback: Super ! Tu t'es échappé !
            -   option: '3'
                feedback: Mauvais choix ! Tu as été mangé.
            -   option: C'est un piège, tu seras toujours mangé !
                feedback: Heureusement, non !
            hint: L'une des portes te mettra en sécurité..
            correct_answer: B
            question_score: '10'
        10:
            question_text: Quel monstre se tient derrière la porte 1 ?
            code: |-
                {print} 'Échape toi de la maison hantée!'
                {print} l y a 3 portes devant toi'
                porte {is} {ask} 'Quelle porte choisis-tu ?'
                monstres {is} vampire, loup-garou, araignée géante
                {if} porte {is} 2 {print} 'Bravo, tu peux t échapper !'
                {else} {print} 'Tu es dévoré par un...' monstres {at} {random}
            mp_choice_options:
            -   option: Hedy choisit un monstre au hasard à chaque fois.
                feedback: Génial !
            -   option: vampire
                feedback: Pas toujours...
            -   option: loup-garou
                feedback: Pas toujours...
            -   option: araignée géante
                feedback: Pas toujours...
            hint: Attention aux 3 derniers mots... monstres `{at} {random}`...
            correct_answer: A
            question_score: '10'
    6:
        1:
            question_text: Quelle est la sortie d'Hedy lorsque tu exécutes ce programme ?
            code: print 2*10
            mp_choice_options:
            -   option: '20'
                feedback: Correct !
            -   option: '12'
                feedback: non, c'est une multiplication pas une addition
            -   option: 2*10
                feedback: Non, Hedy va calculer la réponse
            -   option: '210'
                feedback: Attention, il y a un calcul.
            hint: Le * est utilisé comme signe de multiplication
            correct_answer: A
            question_score: '10'
        2:
            question_text: Quel signe utilises-tu pour une addition ?
            mp_choice_options:
            -   option: '`-`'
                feedback: Ce n'est pas ça.
            -   option: plus
                feedback: Ce n'est pas ça.
            -   option: '`*`'
                feedback: Ce n'est pas ça.
            -   option: '`+`'
                feedback: Correct !
            hint: C'est le signe 'plus'.
            correct_answer: D
            question_score: '10'
        3:
            question_text: Quelle est la sortie d'Hedy lorsque tu exécutes ce code ?
            code: print '3*10'
            mp_choice_options:
            -   option: '30'
                feedback: Ce serait la bonne réponse s'il n'y avait pas de guillemets.
            -   option: '13'
                feedback: Essaye encore..
            -   option: 3*10
                feedback: Correct ! Il y a des guillemets, donc Hedy va l'afficher sans faire de calcul.
            -   option: Rien, Hedy donnera un message d'erreur.
                feedback: Non, il n'y aura pas d'erreurs
            hint: Attention aux guillemets !
            correct_answer: C
            question_score: '10'
        4:
            question_text: Eve a 10 ans. Que va imprimer Hedy pour elle ?
            code: |-
                nom is ask 'Combien de lettres y a-t-il dans ton nom ?'
                âge is ask 'Quel âge as-tu ?'
                nombremagique is nom*âge
                print 'Ton numéro porte bonheur est...' nombremagique
            mp_choice_options:
            -   option: '30'
                feedback: Attention, Hedy imprime autre chose !
            -   option: '10'
                feedback: Recommence !
            -   option: Ton numéro porte bonheur est... 30
                feedback: Bien joué !
            -   option: Ton numéro porte bonheur est... 10
                feedback: Son numéro de chance est le nom multiplié par l'âge ...
            hint: 'Eve a 3 lettres, elle a 10 ans donc : lettres fois âge = 3*10 = ...'
            correct_answer: C
            question_score: '10'
        5:
            question_text: Si 5 personnes mangent dans ce restaurant, combien doivent-elles payer au total ?
            code: |-
                print 'Bienvenue chez Hedy !'
                people is ask 'Combien de personnes mangent avec nous ce soir ?'
                prix is people * 10
                print 'Ce fera ' prix 'euros s il te plait'
            mp_choice_options:
            -   option: 5 dollars
                feedback: Hélas, c'est plus cher
            -   option: 10 dollars
                feedback: Non, c'est 10 par personne !
            -   option: 15 dollars
                feedback: Attention, c'est une multiplication !
            -   option: 50 dollars
                feedback: Bien !
            hint: '`prix` `est` `personnes` `multiplie` 10'
            correct_answer: D
            question_score: '10'
        6:
            question_text: Combien coûte un hamburger dans ce restaurant ?
            code: |-
                {print} 'Bienvenue chez Hedy !'
                choix = {ask} 'Qu est-ce que tu veux manger ?'
                prix = 0
                {if} choix {is} hamburger prix = 15
                {if} choix {is} frites prix = 6
            mp_choice_options:
            -   option: 15 dollars
                feedback: Super !
            -   option: 6 dollars
                feedback: Les frites coûtent 6 dollars
            -   option: 0 dollars
                feedback: Le hamburger n'est pas gratuit !
            -   option: 21 dollars
                feedback: C'est le prix d'un hamburger avec des frites !
            hint: Regarde sur la 4ème ligne.
            correct_answer: A
            question_score: '10'
        7:
            question_text: Pourquoi n'a-t-on pas mis 'prix + 3' à la place de 'prix is prix + 3' à la ligne 7 ?
            code: |-
                print 'Bienvenue chez Hedy !'
                prix is 0
                boisson is ask 'Que veux-tu boire ?'
                if boisson is coca prix is prix + 3
                if boisson is eau prix is prix + 1
                plat is ask 'Que veux-tu manger ?'
                if plat is hamburger prix is prix + 15
                if plat is frites prix is prix + 6
                print 'cela fera' prix 'euros !'
            mp_choice_options:
            -   option: Les 2 sont équivalents.
                feedback: Non, ce n'est pas vrai !
            -   option: Parce que Hedy ne comprend pas
                feedback: Hedy comprendrait, mais ne fera pas ce que tu veux !
            -   option: Parce que l'on veut ajouter 3 au total !
                feedback: Bien joué !
            -   option: Parce que le prix est de 0 euros pour commencer.
                feedback: C'est vrai, mais ce n'est pas la raison !
            hint: Le prix ne doit pas être de 3, mais de 3 euros de plus !
            correct_answer: C
            question_score: '10'
        8:
            question_text: Pourquoi ce code est-il incorrect ?
            code: |-
                réponse correcte is 3*12
                réponse is ask 'Combien font 3 fois 12 ?'
                if réponse is réponse correcte print 'Bien joué!'
                else print 'Raté, la réponse etait ..' réponse correcte
            mp_choice_options:
            -   option: Il ne devrait pas y avoir de guillemets à la ligne 2.
                feedback: Non, il doit y en avoir !
            -   option: La variable s'appelle 'réponse correcte', mais le nom d'une variable ne peut être qu'un mot.
                feedback: Correct ! Il faudrait renommer la variable en 'réponsecorrecte'
            -   option: Les commandes if et else doivent être sur la même ligne.
                feedback: Non, c'est faux.
            -   option: La variable de la ligne 2 ne peut pas être appelée réponse, car elle est trop similaire à la variable réponse correcte.
                feedback: Les noms des variables peuvent être similaires..
            hint: Fais attention aux noms des variables !
            correct_answer: B
            question_score: '10'
        9:
            question_text: Imagine que tu aimes le football à 10, que tu as mangé 2 bananes et que tu t'es lavé les mains 3 fois aujourd'hui. A quel point la diseuse de bonne aventure pense que tu es intelligent ?
            code: |-
                print 'Je suis Hedy la Voyante'
                print 'Je vais prédire à quel point tu es intelligent !'
                foot is ask 'Sur une échelle de 0 à 10, à quel point aimes-tu le football ?'
                bananes is ask 'Combien de bananes as-tu mangé cette semaine ?'
                main is ask 'Combien de fois t'es-tu lavé les mains aujourd'hui ?'
                resultat is bananes + main
                resultat is resultat * foot
                print 'tu as un QI de ' resultat
            mp_choice_options:
            -   option: '10'
                feedback: (2 bananes + 3 main) * 10 foot = 5*10 = ?
            -   option: '32'
                feedback: (2 bananes + 3 main) * 10 foot = 5*10 = ?
            -   option: '50'
                feedback: Super, tu es doué !
            -   option: '100'
                feedback: (2 bananes + 3 main) * 10 foot = 5*10 = ?
            hint: (2 bananes + 3 main) * 10 foot = 5*10 = ?
            correct_answer: C
            question_score: '10'
        10:
            question_text: Which statement is true?
            code: |-
                name _?_ Hedy
                print name 'is walking trough the forrest'
            mp_choice_options:
            -   option: You can only fill in the word is on the _?_
                feedback: You are allowed to use the = sign as well
            -   option: You can fill in either the word is or the = sign on the _?_
                feedback: Amazing!
            -   option: You have to fill in =is= on the _?_.
                feedback: No, one = sign is enough
            -   option: You can only use the = sign when working with numbers, not with words.
                feedback: You can also use = with words.
            hint: is and = are both allowed
            correct_answer: B
            question_score: '10'
    7:
        1:
            question_text: Combien de lignes peut-on répéter à la fois avec la commande `repeat` à ce niveau ?
            mp_choice_options:
            -   option: '0'
                feedback: Non..
            -   option: '1'
                feedback: Correct, une ligne à la fois !
            -   option: '2'
                feedback: Dans ce niveau, une seule ligne à la fois
            -   option: infini
                feedback: Dans les niveaux suivant peut-être, mais pas encore !
            hint: Tu ne peux répéter qu'une ligne à la fois !
            correct_answer: B
            question_score: '10'
        2:
            question_text: Quel code est le bon ?
            mp_choice_options:
            -   option: '{print} 100 {times} ''Salut !'''
                feedback: Malheureusement non
            -   option: '{print} {repeat} 100 {times} ''Salut !'''
                feedback: Malheureusement non
            -   option: '{repeat} ''Salut !'' 100 {times} "'
                feedback: Malheureusement non
            -   option: '{repeat} 100 times {print} ''Salut !'''
                feedback: Bien joué !
            hint: D'abord la commande `{repeat}`, puis la commande `{print}`
            correct_answer: D
            question_score: '10'
        3:
            question_text: Ce code est-il bon ou mauvais ?
            code: repeat 100 times 'Salut !'
            mp_choice_options:
            -   option: Ce code est valide
                feedback: Non, il manque un mot
            -   option: Faux, il manque la commande `repeat`
                feedback: La commande `repeat` existe déjà !
            -   option: Faux, il manque la commande `times`
                feedback: La commande `times` existe déjà !
            -   option: Faux, il manque la commande `print`
                feedback: Correct !
            hint: (?) Hello world !
            correct_answer: D
            question_score: '10'
        4:
            question_text: Quel mot est incorrect dans le code ?
            code: |-
                print 'I'm blue'
                repeat 7 times print 'da ba dee, da ba da'
            mp_choice_options:
            -   option: I'm
                feedback: C'est ça !
            -   option: print
                feedback: l'orthographe est correcte
            -   option: repeat
                feedback: l'orthographe est correcte
            -   option: times
                feedback: l'orthographe est correcte
            hint: Fais attention aux apostrophes !
            correct_answer: A
            question_score: '10'
        5:
            question_text: Ce code est-il bon ou mauvais ?
            code: repeat 100 print 'Hedy est génial !'
            mp_choice_options:
            -   option: Valide
                feedback: Hélas non !
            -   option: Faux
                feedback: Effectivement, il manque la commande `times` !
            hint: Il manque une commande !
            correct_answer: B
            question_score: '10'
        6:
            question_text: Quelle sera la sortie de ce code ?
            code: |-
                print 'Quand on lance un yo-yo'
                repeat 3 times print 'Il descend et remonte'
            mp_choice_options:
            -   option: |-
                    Quand on lance un yo-yo
                    Il descend et remonte
                feedback: Regarde mieux où est le `repeat`
            -   option: |-
                    Quand on lance un yo-yo
                    Quand on lance un yo-yo
                    Quand on lance un yo-yo
                    Il descend et remonte
                feedback: Regarde mieux où est le `repeat`
            -   option: |-
                    Quand on lance un yo-yo
                    Il descend et remonte
                    Quand on lance un yo-yo
                    Il descend et remonte
                    Quand on lance un yo-yo
                    Il descend et remonte
                feedback: Regarde mieux où est le `repeat`
            -   option: |-
                    Quand on lance un yo-yo
                    Il descend et remonte
                    Il descend et remonte
                    Il descend et remonte
                feedback: Bravo, tu as la bonne réponse !
            hint: Seul 'Il descend et remonte' est répété 3 fois.
            correct_answer: D
            question_score: '10'
        7:
            question_text: Quelle sera la sortie de ce code ?
            code: |-
                repeat 2 times print 'We will'
                print 'ROCK YOU!'
            mp_choice_options:
            -   option: |-
                    We will We will
                    ROCK YOU!
                feedback: '''We will'' n’apparaît pas 2 fois sur la même ligne'
            -   option: |-
                    We will
                    We will
                    ROCK YOU!
                feedback: Bien !
            -   option: |-
                    We will
                    ROCK YOU!
                    We will
                    ROCK YOU!
                feedback: ROCK YOU! n’apparaît qu'une fois !
            -   option: |-
                    We will
                    ROCK YOU!
                feedback: Pense à la commande `repeat`
            hint: Regarde où est la commande `repeat`
            correct_answer: B
            question_score: '10'
        8:
            question_text: Quel sera le code pour avoir cette sortie ?
            code: |-
                1 2 3
                chocolat
                1 2 3
                4 5 6
                cassis
            mp_choice_options:
            -   option: |-
                    print '1 2 3'
                    print 'chocolat'
                    print '1 2 3'
                    print '4 5 6'
                    print 'cassis'
                feedback: Parfait, tu ne peux pas utiliser la commande `repeat` ici
            -   option: |-
                    repeat 2 times print '1 2 3'
                    print '4 5 6'
                    print 'cassis'
                feedback: Où est passé le 'chocolat' ?
            -   option: |-
                    repeat 2 times print '1 2 3'
                    print 'chocolat'
                    print '4 5 6'
                    print 'cassis'
                feedback: Ce n'est pas dans le bon ordre
            -   option: |-
                    repeat 2 times print '1 2 3'
                    repeat 2 times print 'Do do'
                    print '4 5 6'
                    print 'cassis'
                feedback: Ce n'est pas dans le bon ordre
            hint: On ne peut utiliser la `repeat` que si l'on veut avoir exactement la même ligne 2 fois (ou plus) de suite.
            correct_answer: A
            question_score: '10'
        9:
            question_text: Quel sera le code pour avoir cette sortie ?
            code: |-
                Batman survolait Gotham.
                Quand soudain, il a entendu quelqu un crier...
                Au secours !
                Au secours !
                Au secours !
                Aidez-moi !
            mp_choice_options:
            -   option: |-
                    print 'Batman survolait Gotham.'
                    print 'Quand soudain, il a entendu quelqu un crier...'
                    print 'Au secours !'
                    repeat 3 times print 'Aidez-moi !'
                feedback: Tu ne répètes pas la bonne ligne
            -   option: "print 'Batman survolait Gotham.' \nprint 'Quand soudain, il a entendu quelqu un crier...'\nrepeat 3 times 'Au secours !'\nprint 'Aidez-moi !'"
                feedback: Hélas non !
            -   option: |-
                    print Batman survolait Gotham.
                    print Quand soudain, il a entendu quelqu un crier...
                    repeat 3 times print Au secours !
                    print Aidez-moi !
                feedback: Tu as oublié les guillemets
            -   option: "print 'Batman survolait Gotham.' \nprint 'Quand soudain, il a entendu quelqu un crier...'\nrepeat 3 times print 'Au secours !'\nprint 'Aidez-moi !'"
                feedback: Parfait !
            hint: '''Au secours !'' doit apparaître 3 fois'
            correct_answer: D
            question_score: '10'
        10:
            question_text: Quel sera le code pour avoir cette sortie ?
            code: |-
                Si tu es content tape dans tes mains !
                Si tu es content tape dans tes mains !
                Si tu es vraiment content tape dans tes mains !
                Si tu es content tape dans tes mains !
            mp_choice_options:
            -   option: |-
                    repeat 2 times 'Si tu es content tape dans tes mains !'
                    print 'Si tu es vraiment content tape dans tes mains !'
                    print 'Si tu es content tape dans tes mains !'
                feedback: Il manque une commande !
            -   option: |-
                    repeat 2 times print 'Si tu es content tape dans tes mains !'
                    print 'Si tu es vraiment content tape dans tes mains !'
                    print 'Si tu es content tape dans tes mains !'
                feedback: Bien !
            -   option: |-
                    repeat 3 times print 'Si tu es content tape dans tes mains !'
                    print 'Si tu es vraiment content tape dans tes mains !'
                feedback: Ce n'est pas le bon ordre.
            -   option: |-
                    repeat 4 times print 'Si tu es content'
                    print 'vraiment'
                    repeat 4 times print 'tape dans tes mains !'
                feedback: Ce n'est pas le bon ordre.
            hint: Fais attention à l'ordre des phrases.
            correct_answer: B
            question_score: '10'
    8:
        1:
            question_text: Which output will be produced by this code?
            code: |-
                {repeat} 2 {times}
                    {print} 'Hello'
                    {print} 'Im Hedy!'
            mp_choice_options:
            -   option: |-
                    Hello
                    Im Hedy!
                feedback: Everything is printed twice.
            -   option: |-
                    Hello
                    Hello
                    Im Hedy
                feedback: The second line is repeated twice as well.
            -   option: |-
                    Hello
                    Im Hedy!
                    Hello
                    Im Hedy!
                feedback: Super!
            -   option: |-
                    Hello
                    Hello
                    Im Hedy!
                    Im Hedy!
                feedback: Everything is printed twice
            hint: Both lines are repeated twice.
            correct_answer: C
            question_score: '10'
        2:
            question_text: What is wrong with this code?
            code: |-
                {repeat} 5 {times}
                {print} 'Hedy is cool!'
            mp_choice_options:
            -   option: This should be only one line, not 2.
                feedback: No it should be 2 lines.
            -   option: This `{print}` command has to go
                feedback: No, you need it.
            -   option: There is a spelling mistake in the `{repeat}` command.
                feedback: Nee, repeat is de goede spelling
            -   option: The second line need to start with 4 spaces as indentation.
                feedback: Correct!
            hint: Something is missing in the second line?
            correct_answer: D
            question_score: '10'
        3:
            question_text: What output will be produced when you run this program?
            code: |-
                {repeat} 3 {times}
                    {print} 'Baby shark tututudutudu'
                {print} 'Baby shark'
            mp_choice_options:
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                feedback: Mind the `{repeat}` command!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark tututudutudu
                    Baby shark
                feedback: The last line has no indentation, so it's not repeated.
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark tututudutudu
                    Baby shark
                feedback: Right!
            -   option: |-
                    Baby shark tututudutudu
                    Baby shark
                    Baby shark
                    Baby shark
                feedback: What is being repeated and what isn't.
            hint: What is being repeated and what is not?.
            correct_answer: C
            question_score: '10'
        4:
            question_text: Which output is correct?
            code: |-
                {print} 'The children went:'
                {repeat} 2 {times}
                    {print} 'Yay!'
                    {print} 'Were going on holiday!'
            mp_choice_options:
            -   option: |-
                    The children went:
                    Yay!
                    Were going on holiday!
                feedback: Mind the `{repeat}` command !
            -   option: |-
                    The children went:
                    Yay!
                    Were going on holiday!
                    Yay!
                    Were going on holiday!
                feedback: Correct!
            -   option: |-
                    The children went:
                    Yay!
                    Yay!
                    Were going on holiday!
                    Were going on holiday!
                feedback: This order is incorrect.
            -   option: |-
                    The children went:
                    Yay!
                    Yay!
                    Were going on holiday!
                feedback: The last line is repeated too.
            hint: The block under the `{repeat}` command is repeated twice.
            correct_answer: B
            question_score: '10'
        5:
            question_text: What is wrong with this code?
            code: |-
                end = {ask} 'Do you want a happy or a sad ending?'
                {if} end {is} happy {print} 'They lived happily ever after'
                {else} {print} 'The world exploded. The end.'
            mp_choice_options:
            -   option: The `{print}` commands on the last two lines should start on new lines en start with 4 spaces.
                feedback: That's right!
            -   option: '`{else}` is not a command!'
                feedback: It is!
            -   option: Lines that start with `{if}` should start with 4 spaces
                feedback: That's not true
            -   option: '`{ask}` is no longer a command'
                feedback: That's not true
            hint: Something is wrong with indentation
            correct_answer: A
            question_score: '10'
        6:
            question_text: What will be the output of this code when we enter pancakes?
            code: |-
                {print} 'Welcome to restaurant Hedy'
                {repeat} 2 {times}
                    food {is} {ask} 'What do you want to eat?'
                    {print} food
            mp_choice_options:
            -   option: |-
                    Welcome to restaurant Hedy
                    Pancakes
                feedback: There is no repetition in this answer.
            -   option: |-
                    Welcome to restaurant Hedy
                    Welcome to restaurant Hedy
                    Pancakes
                    Pancakes
                feedback: This answer also repeats the welcome message
            -   option: |-
                    Welcome to restaurant Hedy
                    What do you want to eat?
                    What do you want to eat?
                    Pancakes
                    Pancakes
                feedback: Almost! But look at the question, it is not repeated.
            -   option: |-
                    Welcome to restaurant Hedy
                    Pancakes
                    Pancakes
                feedback: Well done!
            hint: The first sentence and question will not be repeated
            correct_answer: D
            question_score: '10'
        7:
            question_text: What is wrong with this code?
            code: |-
                eten = {ask} 'What would you like to eat?'
                {if} food {is} fries
                sauce = {ask} 'What sauce would you like?'
                    {print} 'One fries with ' sauce
                {if} food {is} pizza
                    topping = {ask} 'What topping would you like?'
                    {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: Nothing this code is correct!
                feedback: Something is wrong!.
            -   option: You're not allowed to use an `{if}` command after an `{ask}` command.
                feedback: You are!.
            -   option: You don't have to use indentation twice. Only in the first `{if}` command.
                feedback: You always have to use indentation.
            -   option: The indentation is wrong in the first `{if}` command.
                feedback: That's right.
            hint: Take a careful look at the indentation.
            correct_answer: D
            question_score: '10'
        8:
            question_text: In which of the codes is the indentation done right?
            mp_choice_options:
            -   option: |-
                    ```
                    {if} answer is right
                       {print} You are...
                          sleep
                              {print} right!
                          {else}
                              {print} You are wrong!
                    ```
                feedback: You are wrong!
            -   option: |-
                    ```
                    {if} answer is right
                    {print} You are...
                    sleep
                    {print} right!
                    {else}
                    {print} You are wrong!
                    ```
                feedback: You are wrong!
            -   option: |-
                    ```
                    {if} answer is right
                        {print} You are...
                        sleep
                        {print} right!
                    {else}
                        {print} You are wrong!
                    ```
                feedback: You are... right!
            -   option: |-
                    ```
                    {if} answer is right
                        {print} You are...
                        sleep
                    {print} right!
                    {else}
                        {print} You are wrong!
                    ```
                feedback: You are wrong!
            hint: What should happen if the person is right? And what else?
            correct_answer: C
            question_score: '10'
        9:
            question_text: What line(s) in this code should start with 4 spaces?
            code: |-
                1 music = {ask} 'What is your favorite music genre?'
                2 {if} music is rock
                3 {print} '🤘'
                4 {else}
                5 {print} '👎'
            mp_choice_options:
            -   option: Line 2 and 4
                feedback: The lines after the `{if}` and `{else}` command should start with 4 spaces
            -   option: Only line 3
                feedback: Not only 3...
            -   option: Line 3, 4 and 5
                feedback: Line 4 shouldn't
            -   option: Line 3 and 5
                feedback: Great job!
            hint: The lines after an `{if}` or `{else}` command should start with 4 spaces.
            correct_answer: D
            question_score: '10'
        10:
            question_text: Which statement is true?
            code: |-
                1 level = {ask} 'What level are you on?"
                2 {if} level {is} 8
                3 {print} Great job!
            mp_choice_options:
            -   option: All lines should start with 4 spaces
                feedback: That's not true
            -   option: Line 2 and 3 should start with 4 spaces
                feedback: That's not true
            -   option: Line 2 should start with 4 spaces
                feedback: That's not true
            -   option: Line 3 should start with 4 spaces
                feedback: You are correct!
            hint: Only one line starts with 4 spaces, but which one...?
            correct_answer: D
            question_score: '10'
    9:
        1:
            question_text: What is wrong with this code?
            code: |-
                {repeat} 3 {times}
                   eten = {ask} 'What would you like to eat?'
                   {if} food {is} fries
                       sauce = {ask} 'What sauce would you like?'
                       {print} 'One fries with ' sauce
                   {if} food {is} pizza
                       topping = {ask} 'What topping would you like?'
                       {print} 'One pizza with ' topping
                {print} 'That you for your order'
            mp_choice_options:
            -   option: Nothing this code is correct!
                feedback: That's right!.
            -   option: You're not allowed to use an `{if}` command after an `{ask}` command.
                feedback: You are!.
            -   option: You don't have to use indentation twice.
                feedback: You always have to use indentation.
            -   option: The indentation is wrong in the last `{if}` command.
                feedback: It not, though.
            hint: all the indentation is done correctly.
            correct_answer: A
            question_score: '10'
        2:
            question_text: What will be printed after entering the correct password?
            code: |-
                password = {ask} 'What is the password?'
                correct_password = Hedy
                {if} password {is} correct_password
                    {repeat} 2 {times}
                        {print} 'Good job!'
                        {print} 'You can use the computer!'
                {else}
                    {print} 'The computer will explode in 5... 4... 3... 2... 1...'
            mp_choice_options:
            -   option: |-
                    Good job!
                    Good job!
                feedback: That's not it!
            -   option: The computer will explode in 5... 4... 3... 2... 1...
                feedback: That's not it!
            -   option: |-
                    Good job !
                    Good job!
                    You can use the computer!
                feedback: That's not it!
            -   option: |-
                    Good job!
                    You can use the computer!
                    Good job!
                    You can use the computer!
                feedback: Correct!
            hint: Everything under the `{repeat}` command is repeated twice.
            correct_answer: D
            question_score: '10'
        3:
            question_text: Which case should you choose to win a million dollars?
            code: |-
                {print} 'Choose the right case and win!'
                case = {ask} 'Which case will you pick? 1 or 2?'
                {if} case {is} 1
                    action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell your case for 10 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win an apple pie'
                {if} case {is} 2
                    action = {ask} 'Open it or sell it?'
                         {if} action {is} sell
                             {print} 'You sell the case for 500 dollars'
                         {if} action {is} open
                             {print} 'You open the case and win a million dollars!'
            mp_choice_options:
            -   option: case 1, sell
                feedback: You don't win a million!
            -   option: case 1, open
                feedback: You don't win a million
            -   option: case 2, sell
                feedback: You don't win a million
            -   option: case 2, open
                feedback: Great job! You win!
            hint: Follow the right path
            correct_answer: D
            question_score: '10'
        4:
            question_text: Which statement is true?
            code: |-
                name = {ask} 'What is your name?'
                size = {ask} 'What is your shoe size?'
                {if} size {is} 38
                    {if} name {is} Cinderella
                        {print} 'I was looking for you!'
                    {else}
                        {print} 'You are not the one!'
                {else}
                    {print} 'Ill keep looking'
            mp_choice_options:
            -   option: Sleeping Beauty with shoe size 38 gets the output 'Ill keep looking'
                feedback: No, she gets 'You are not the one!'
            -   option: 'Cinderella with shoe size 40 gets the output: ''I was looking for you!'''
                feedback: No, she gets 'Ill keep looking'
            -   option: Sleeping Beauty with shoe size 40 gets the output 'Ill keep looking'
                feedback: That's right!
            -   option: Cinderella with shoe size 40 gets the output 'I was looking for you!'
                feedback: No she gets 'Ill keep looking'
            hint: No matter what your name is, if you have shoe size 40 you will get the message 'Ill keep looking'.
            correct_answer: C
            question_score: '10'
        5:
            question_text: Which code produced this output?
            output: |-
                Icecream is the best!
                Icecream is the best!
                Icecream is the best!
            mp_choice_options:
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: Don't forget the indentation after `{repeat}` commands.
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                    {repeat} 3 {times}
                        {print} 'Icecream is the best!'
                    ```
                feedback: Use indentation after an `{if}` command
            -   option: |-
                    ```
                    desert = {ask} 'What is your favorite type of desert?'
                    {if} desert {is} icecream
                        {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: Perfect
            -   option: |-
                    ```
                    {repeat} 3 {times}
                        desert = {ask} 'What is your favorite type of desert?'
                        {if} desert {is} icecream
                            {repeat} 3 {times}
                            {print} 'Icecream is the best!'
                    ```
                feedback: There are 2 `{repeat}` commands in this code.
            hint: Watch the indentation
            correct_answer: C
            question_score: '10'
        6:
            question_text: After which command(s) should you use indentation (starting the next line with 4 spaces)?
            mp_choice_options:
            -   option: '`{if}`'
                feedback: Don't forget the others
            -   option: '`{if}` `{repeat}`'
                feedback: Don't forget `{else}`!
            -   option: '`{if}` `{else}` `{repeat}`'
                feedback: Keep it up!
            -   option: '`{if}` `{else}` `{repeat}` `{print}`'
                feedback: Not with print
            hint: Indentation happens on the line below some commands
            correct_answer: C
            question_score: '10'
        7:
            question_text: "In this code from a pizza restaurant. \nYoull get a 5 dollar discount if you order a medium pizza with coke.\n What should you do to debug this code?"
            code: |-
                {if} food {is} pizza
                {if} size {is} medium
                {if} drink {is} coke
                price = price - 2
            mp_choice_options:
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                                price = price - 2
                    ```
                feedback: Amazing!
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                    {if} drink {is} coke
                        price = price - 2
                    ```
                feedback: Try again!
            -   option: |-
                    ```
                    {if} food {is} pizza
                    {if} size {is} medium
                    {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: Try again
            -   option: |-
                    ```
                    {if} food {is} pizza
                        {if} size {is} medium
                            {if} drink {is} coke
                            price = price - 2
                    ```
                feedback: Try again
            hint: After each `{if}` command, the line below should indent
            correct_answer: A
            question_score: '10'
        8:
            question_text: What is wrong is this code?
            code: |-
                age = {ask} 'Happy Birthday! How old are you?'
                singing = {ask} 'Would you like us to sing?'
                    if singing {is} yes
                        {repeat} years {times}
                        {print} 'Hip Hip Hooray'
            mp_choice_options:
            -   option: You can't put two questions in a row
                feedback: Yes you can.
            -   option: The variable called 'age' is later on used as 'years'
                feedback: Keen eye! Good job!
            -   option: You're not allowed to start with 8 spaces, like line 4 and 5 do
                feedback: You actually must start like that.
            -   option: A code must always start with a `{print}` command in the first line
                feedback: That's not true.
            hint: The indentation is done right this time
            correct_answer: B
            question_score: '10'
        9:
            question_text: How many `{if}` commands can be placed inside another `{if}` command?
            mp_choice_options:
            -   option: None, that is not allowed
                feedback: You are allowed to
            -   option: Only 1
                feedback: You could use more if you like
            -   option: '3'
                feedback: You could use more if you like
            -   option: Infinite, as long as you keep using indentation correctly
                feedback: That is true
            hint: You can put an `{if}` command inside an `{if}` command.
            correct_answer: D
            question_score: '10'
        10:
            question_text: Which statement is true?
            code: |-
                1 {repeat} 2 {times}
                2 {if} level {is} 9
                3 {print} Great job!
            mp_choice_options:
            -   option: All lines should start with 4 spaces
                feedback: Only line 2 and 3 start with spaces
            -   option: Line 2 and 3 should start with 4 spaces
                feedback: Line 3 should start with 8
            -   option: Line 2 and 3 should start with 8 spaces
                feedback: Line 2 should start with 4
            -   option: line 2 should atart with 4 spaces and line 3 with 8
                feedback: You are correct!
            hint: The first line doens't start with any spaces
            correct_answer: D
            question_score: '10'
    10:
        1:
            question_text: Quelle sera la sortie de ce code ?
            code: |-
                for i in range 1 to 3
                    print i
            mp_choice_options:
            -   option: |-
                    1
                    2
                    3
                feedback: Correct !
            -   option: 1 2 3
                feedback: Ce n'est pas ça !
            -   option: 1, 2, 3
                feedback: Ce n'est pas ça !
            -   option: '123'
                feedback: Ce n'est pas ça !
            hint: '`{for}` chaque compliment dans les listes de compliments...'
            correct_answer: A
            question_score: '10'
        2:
            question_text: Quel sera le code pour avoir cette sortie ?
            code: |-
                1
                2
                3
                4
                5
                Je suis là !
            mp_choice_options:
            -   option: |-
                    for i in range 1 to 5
                        print i
                    print 'Je suis là !'
                feedback: Parfait !
            -   option: |-
                    for i in range 1 to 5
                    print i
                    print 'Je suis là !'
                feedback: Ce code ne fonctionnera pas. Tu as besoin d'une indentation après for.
            -   option: |-
                    for i in range 1 to 5
                        print i
                        print 'Je suis là !'
                feedback: |-
                    Hedy fera '1
                    Je suis là !, 2
                    Je suis là ! etc.
            -   option: |-
                    for i in range 1 to 5
                        print 'i'
                    print 'Je suis là !'
                feedback: '`i` est une variable et ne devrait pas avoir de guillemets'
            hint: D'abord tous les nombres, puis la phrase !
            correct_answer: A
            question_score: '10'
        3:
            question_text: Quel sera le code pour avoir cette sortie ?
            code: |-
                10
                9
                8
                7
                6
                5
                4
                3
                2
                1
                0
            mp_choice_options:
            -   option: |-
                    for i in range 0 to 10
                        print i
                feedback: Les nombres ne seront pas dans le bon sens
            -   option: |-
                    for i in range 0 to 10
                        print - i
                feedback: Les nombres seront négatifs
            -   option: |-
                    for i in range 10 to 0
                        print i
                feedback: Hélas, cela ne marchera pas
            -   option: |-
                    for i in range 0 to 10
                        print 10 - i
                feedback: Bien joué !
            hint: Cela nécessite un peu de calcul..
            correct_answer: D
            question_score: '10'
        4:
            question_text: Quel est le problème avec ce code ?
            code: |-
                for i in range 1 to 10
                print i
            mp_choice_options:
            -   option: Le `i` de la dernière ligne a besoin de guillemets
                feedback: Non, il n'y en a pas besoin
            -   option: Tu ne peux pas utiliser 'range 1 to 5' mais seulement 'range 1 to 10'.
                feedback: Tu peux choisir l'intervalle que tu veux
            -   option: La ligne 1 doit commencer par un alinéa.
                feedback: Pas sur la ligne 1...
            -   option: La ligne 2 doit commencer par un alinéa.
                feedback: Parfait !
            hint: Il manque un alinéa..
            correct_answer: D
            question_score: '10'
        5:
            question_text: Quel est la commande manquante ?
            code: |-
                for i in _?_ 1 to 10
                    print i
            mp_choice_options:
            -   option: rang
                feedback: Non !
            -   option: range
                feedback: Correct !
            -   option: ragne
                feedback: Non !
            -   option: ranch
                feedback: Non !
            hint: Hedy doit choisir un nombre `{at} {random}`
            correct_answer: B
            question_score: '10'
        6:
            question_text: Combien de fois le mot 'Hello' apparaît-il sur ton écran lorsque tu exécutes le code ?
            code: |-
                for i in range 0 to 2
                    print 'Hello'
            mp_choice_options:
            -   option: 1 fois
                feedback: Non !
            -   option: 2 fois
                feedback: Non !
            -   option: 3 fois
                feedback: C'est ça !
            -   option: 0 fois
                feedback: Non !
            hint: 0, 1, 2, cela fait 3 chiffres !
            correct_answer: C
            question_score: '10'
        7:
            question_text: Quel est la ligne manquante ?
            code: |-
                print 'Bienvenue chez Hedy'
                gens is ask 'Combien de personnes vont manger ici ce soir ?'
                _?_
                    plat is ask 'Que voulez-vous commander ?'
                    print plat
            mp_choice_options:
            -   option: for i in range 0 to 3
                feedback: Il peut ne pas avoir 3 personnes
            -   option: for i in range 1 to personnes
                feedback: La variable `personnes` n'existe pas
            -   option: for i in range 1 to gens
                feedback: Bien !
            -   option: for i in range 0 to gens
                feedback: Il y aura une personne en trop !
            hint: Il faut utiliser un for et la variable `gens`
            correct_answer: C
            question_score: '10'
        8:
            question_text: Quelle sera la sortie de ce code ?
            code: |-
                for i in range 23 to 25
                    print 'hi'
            mp_choice_options:
            -   option: |-
                    23
                    24
                    25
                feedback: Attention aux guillemets !
            -   option: 23 hi 24 hi 25 hi
                feedback: Attention aux guillemets !
            -   option: |-
                    ```
                    noms 'obtient une chemise de ' couleur  {at} {random}
                    ```
                feedback: Correct
            -   option: Le mot 'hi' apparaîtra 25 fois
                feedback: Attention on part de 23 !
            hint: On n'affiche pas 'i'
            correct_answer: C
            question_score: '10'
        9:
            question_text: Combien de fois Hedy chante 'Hip hip Hourra !' ?
            code: |-
                âge is ask 'Quel âge as-tu ?'
                for i in range 1 to âge
                    print is 'Hip hip Hourra !'
            mp_choice_options:
            -   option: Timon, que veux-tu manger en guise d'entrée ?
                feedback: Hélas non !
            -   option: Onno, que veux-tu manger en guise d'entrée ?
                feedback: Hélas non !
            -   option: Timon, que veux-tu manger comme dessert ?
                feedback: Hélas non !
            -   option: Cela dépend de ton âge.
                feedback: C'est ça !
            hint: for i in range 1 to âge
            correct_answer: D
            question_score: '10'
        10:
            question_text: Qu'est-ce qui est vrai dans ce code ?
            code: |-
                les_prix = Le million de dollars,La voiture,Le sandwich
                noms = Bob, Patrick, Sandy, Larry
                {for} prix {in} les_prix
                    {print} prix 'a été gagné par' noms {at} {random}
            mp_choice_options:
            -   option: |-
                    for i in range 1 to 3
                        print blablablabla
                        print blabliblo
                feedback: Hélas non !
            -   option: |-
                    for i in range 1 to 3
                        print blablablabla
                    print blabliblo
                feedback: C'est ça !
            -   option: |-
                    for i in range 0 to 3
                        print blablablabla
                        print blabliblo
                feedback: 0,1,2,3 cela fait 4 chiffres.
            -   option: |-
                    for i in range 0 to 3
                        print blablablabla
                    print blabliblo
                feedback: 0,1,2,3 cela fait 4 chiffres.
            hint: Fais attention aux indentations
            correct_answer: B
            question_score: '10'
    11:
        1:
            question_text: What word should be at the place of the question mark?
            code: |-
                {for} i {in} _?_ 1 {to} 10
                    {print} i
            mp_choice_options:
            -   option: |-
                    ```
                    counter
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {range}
                    ```
                feedback: Correct
            -   option: |-
                    ```
                    {if}
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {for}
                    ```
                feedback: 'No'
            hint: What did you learn in this level?
            correct_answer: B
            question_score: '10'
        2:
            question_text: What will be the output from this code?
            code: |-
                {for} i {in} {range} 1 {to} 3
                    {print} i
            mp_choice_options:
            -   option: |-
                    1
                    2
                    3
                feedback: Correct!
            -   option: 1 2 3
                feedback: That's not it
            -   option: 1, 2, 3
                feedback: That's not it
            -   option: '123'
                feedback: That's not it
            hint: How do the numbers appear in the screen?
            correct_answer: A
            question_score: '10'
        3:
            question_text: Which code was used to get this output?
            output: |-
                1
                2
                3
                4
                5
                Once I caught a fish alive!
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: Perfect
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                    {print} i
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: This code won't work. You need an indent after {for}.
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} i
                        {print} 'Once I caught a fish alive!'
                    ```
                feedback: Now Hedy will count '1 Once I caught a fish alive!, 2 Once I caught a fish alive! etc.
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 5
                        {print} 'i'
                    {print} 'Once I caught a fish alive!'
                    ```
                feedback: i is a variable and shouldn't have quotation marks
            hint: First all the numbers, then the sentence
            correct_answer: A
            question_score: '10'
        4:
            question_text: Which code was used to get this output?
            output: |-
                10
                9
                8
                7
                6
                5
                4
                3
                2
                1
                0
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} i
                    ```
                feedback: Now Hedy prints the numbers from 0 to 10 instead of 10 to 0.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 to 10
                        {print} - i
                    ```
                feedback: Hedy would print negative numbers in this case.
            -   option: |-
                    ```
                    {for} i {in} {range} 10 to 0
                        {print} 10 9 8 7 6 5 4 3 2 1 0
                    ```
                feedback: Unfortunately this does not exist.
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 10
                        {print} 10 - i
                    ```
                feedback: That's right!
            hint: It has to be a calculation...
            correct_answer: D
            question_score: '10'
        5:
            question_text: What's wrong with this code?
            code: |-
                {for} i {in} {range} 1 {to} 10
                {print} i
            mp_choice_options:
            -   option: The i in the last line need quotation marks
                feedback: No it doesn't.
            -   option: You can't use `{range}` 1 `{to}` 5 only `{range}` 1 `{to}` 10
                feedback: You could use 1 to 5 just as well!
            -   option: Line 1 needs to start with an indention.
                feedback: Not line 1...
            -   option: Line 2 needs to start with an indention
                feedback: Perfect!
            hint: There is something wrong with the indention
            correct_answer: D
            question_score: '10'
        6:
            question_text: How many times does the word Hello appear on your screen when you run the code?
            code: |-
                {for} i {in} {range} 0 {to} 2
                    {print} 'Hello'
            mp_choice_options:
            -   option: 1 time
                feedback: 'No'
            -   option: 2 times
                feedback: 'No'
            -   option: 3 times
                feedback: That's right!
            -   option: Never
                feedback: 'No'
            hint: 0 also counts. So 0,1,2 that's 3 times.
            correct_answer: C
            question_score: '10'
        7:
            question_text: What should be on the place of the question mark?
            code: |-
                {print} 'Welcome to Hedys diner'
                people is {ask} 'How many people will be eating here tonight?'
                _?_
                    food is {ask} 'What would you like to order?'
                    {print} food
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                    ```
                feedback: There's not always 3 people
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} guests
                    ```
                feedback: The variable is not named guests
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} people
                    ```
                feedback: Great!
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} people
                    ```
                feedback: That's one order too many!
            hint: Use the variable 'people'
            correct_answer: C
            question_score: '10'
        8:
            question_text: What will be the output from this code?
            code: |-
                {for} i {in} {range} 23 {to} 25
                    {print} 'hi'
            mp_choice_options:
            -   option: |-
                    23
                    24
                    25
                feedback: The numbers don't appear. It doesn't say `{print}` i.
            -   option: 23 hi 24 hi 25 hi
                feedback: The numbers don't appear. It doesn't say `{print}` i
            -   option: |-
                    hi
                    hi
                    hi
                feedback: Correct
            -   option: The word 'hi' will appear 25 times in a row.
                feedback: No it will only appear 3 times.
            hint: It doesn't say `{print}` i
            correct_answer: C
            question_score: '10'
        9:
            question_text: How many times does Hedy chant Hip Hip Hooray?
            code: |-
                age = {ask} 'How old are you?'
                {for} i {in} {range} 1 {to} age
                    {print} 'Hip Hip Hoorray!'
            mp_choice_options:
            -   option: 1 time
                feedback: Try again
            -   option: 2 times
                feedback: Try again
            -   option: Never
                feedback: Try again
            -   option: That depends on how old you are
                feedback: That's right!
            hint: '`{for}` i `{in}` `{range}` 1 `{to}` age'
            correct_answer: D
            question_score: '10'
        10:
            question_text: Which code belongs to this output?
            output: |-
                Baby shark tututudutudu
                Baby shark tututudutudu
                Baby shark tututudutudu
                Baby shark
            mp_choice_options:
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: Mind the indention
            -   option: |-
                    ```
                    {for} i {in} {range} 1 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: That's right!
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                    {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 is 4 times.'
            -   option: |-
                    ```
                    {for} i {in} {range} 0 {to} 3
                        {print} Baby shark tututudutudu
                        {print} Baby shark
                    ```
                feedback: '`{range}` 0 `{to}` 3 is 4 times.'
            hint: Mind the indention
            correct_answer: B
            question_score: '10'
    12:
        1:
            question_text: Which output is correct?
            code: |-
                print 'three and a half plus one and a half is...'
                print 3.5 + 1.5
            mp_choice_options:
            -   option: '5'
                feedback: Don't forget the first line of code!
            -   option: 3.5 + 1.5
                feedback: This is not the one!
            -   option: |-
                    thee and a half plus one and a half is...
                    five
                feedback: Take a close look at the second line...
            -   option: |-
                    three and a half plus one and a half is...
                    5
                feedback: Great job!
            hint: Both lines are printed!
            correct_answer: D
            question_score: '10'
        2:
            question_text: Which of these codes is correct?
            mp_choice_options:
            -   option: |-
                    ```
                    flavors is vanilla, strawberry, chocolate
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            -   option: |-
                    ```
                    'flavors = vanilla, strawberry, chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            -   option: |-
                    ```
                    flavors = 'vanilla', 'strawberry', 'chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: Alright!
            -   option: |-
                    ```
                    flavors = 'vanilla, strawberry, chocolate'
                    print 'I would like a ' flavors at random ' cake.'
                    ```
                feedback: All the different values of flavors should be in quotation marks.
            hint: The second line is the same in each code, pay attention to the first line
            correct_answer: C
            question_score: '10'
        3:
            question_text: What's wrong with this code?
            code: |-
                favorite_animal = ask 'What is your favorite animal?'
                print 'I like ' favoriteanimal ' too!'
            mp_choice_options:
            -   option: The name of the variable is different in line 1 than in line 2.
                feedback: Correct!
            -   option: The quotation marks aren't used correctly in line 2
                feedback: That's not true
            -   option: You can't use the = sign when using an ask command
                feedback: That's not true
            -   option: Nothing is wrong.
                feedback: That's not true
            hint: The quotation marks are used correctly
            correct_answer: A
            question_score: '10'
        4:
            question_text: In which lines are quotation marks needed to get the code to work?
            code: |-
                print Welcome to the online shoe shop
                category = ask What kind of shoes are you looking for?
                if category = high heels
                  print High heels are 50% off now!
            mp_choice_options:
            -   option: Line 1 and 2
                feedback: 'No'
            -   option: Line 1, 2 and 3
                feedback: 'No'
            -   option: Line 1, 2 and 4
                feedback: 'No'
            -   option: All of the lines
                feedback: Perfect!
            hint: Does line 3 need quotation marks too?
            correct_answer: D
            question_score: '10'
        5:
            question_text: What output does Agent007 get when they put in the correct password?
            code: |-
                name is ask 'What is your name?'
                if name is 'Agent007'
                    a is 'Go to the airport '
                else
                    a is 'Go to the train station '
                password is ask 'What is the password?'
                if password is 'TOPSECRET'
                    b is 'tomorrow at 02.00'
                else
                    b is 'today at 10.00'
                print a + b
            mp_choice_options:
            -   option: Go to the train station today at 10.00
                feedback: The agent won't be catching any bad guys here
            -   option: Go to the airport tomorrow at 02.00
                feedback: You've cracked the code!
            -   option: Go to the train station tomorrow at 02.00
                feedback: The agent won't be catching any bad guys here
            -   option: Go to the airport tomorrow at 10.00
                feedback: The agent won't be catching any bad guys here
            hint: The correct password is TOPSECRET
            correct_answer: B
            question_score: '10'
        6:
            question_text: Which line should be filled in at the ???
            code: |-
                print 'Welcome to McHedy!'
                order = ask 'Would you like a hamburger or fries?'
                if order = 'hamburger'
                  price = 12
                if order = 'fries'
                  price = 4
                drinks = ask 'Would you like a drink with that for 2 dollars?'
                if drinks = 'yes'
                  ???
                print 'That will be ' price ' dollar please'
            mp_choice_options:
            -   option: |-
                    ```
                    price = 14
                    ```
                feedback: What if you only order fries and a drink?
            -   option: |-
                    ```
                    price = '14'
                    ```
                feedback: What if you only order fries and a drink?
            -   option: |-
                    ```
                    price = price + 2
                    ```
                feedback: Excellent!
            -   option: |-
                    ```
                    price = + 2
                    ```
                feedback: Almost there!
            hint: What if you only order fries and a drink?
            correct_answer: C
            question_score: '10'
        7:
            question_text: Which output does a vegan get?
            code: |-
                menu = 'cookies', 'cheese', 'grapes'
                print "It's my birthday! I`ve brought some snacks!"
                diet = ask 'Do you have any dietary restrictions?'
                if diet = 'gluten free'
                    remove 'cookies' from menu
                if diet = 'vegan'
                    remove 'cheese' from menu
                print 'For you I have brought: '
                for snack in menu
                    print snack
            mp_choice_options:
            -   option: |-
                    It's my birthday! I've brought some snacks!
                    For you I have brought:
                    cookies
                    grapes
                feedback: Terrific!
            -   option: |-
                    It's my birthday! I've brought some snacks!
                    For you I have brought:
                    grapes
                feedback: There's more options than just one
            -   option: |-
                    It's my birthday! I've brought some snacks!
                    For you I have brought:
                    cheese
                    grapes
                feedback: A vegan person can't have cheese
            -   option: |-
                    It's my birthday! I've brought some snacks!
                    For you I have brought:
                    grapes
                    cookies
                feedback: Almost there, but look at the order of snacks in the list
            hint: What item is removed from the list when you answer 'vegan'?
            correct_answer: A
            question_score: '10'
        8:
            question_text: Which code was used to create this output?
            code: '3.5'
            mp_choice_options:
            -   option: |-
                    ```
                    print '7 / 2'
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    print 7 / 2
                    ```
                feedback: That is right!
            -   option: |-
                    ```
                    print 7 : 2
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    print 7 * 2
                    ```
                feedback: 'No'
            hint: 7 devided by 2 is 3.5
            correct_answer: B
            question_score: '10'
        9:
            question_text: Which code should be filled in in line 1 at the ???
            code: |-
                ???
                print 'You won ' prices at random '!'
            mp_choice_options:
            -   option: |-
                    ```
                    prices = 'one' 'million' 'dollars', 'nothing'
                    ```
                feedback: You won nothing
            -   option: |-
                    ```
                    prices = 'one million dollars, nothing'
                    ```
                feedback: You won nothing
            -   option: |-
                    ```
                    prices = 'one million dollars', 'nothing'
                    ```
                feedback: Winner!
            -   option: |-
                    ```
                    'prices' = 'one million dollars', 'nothing'
                    ```
                feedback: You one nothing
            hint: The items on the list should be in quotation marks
            correct_answer: C
            question_score: '10'
        10:
            question_text: Which line of code should be filled in at the ??? to complete the song ?
            code: |-
                actions = 'clap your hands', 'stomp your feet', 'shout Hurray!'
                ???
                    for i in range 0 to 1
                        print 'if youre happy and you know it'
                        print action
                    print 'if youre happy and you know it and you really want to show it'
                    print 'if youre happy and you know it'
                    print action
            mp_choice_options:
            -   option: for i in range 1 to 3
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: for action in actions
                feedback: You are amazing!
            -   option: repeat 3 times
                feedback: This is a hard one! All the actions on the list must be in the song.
            -   option: print actions at random
                feedback: This is a hard one! All the actions on the list must be in the song.
            hint: This is a hard one! All the actions on the list must be in the song.
            correct_answer: B
            question_score: '10'
    13:
        1:
            question_text: Which code should be filled in at the ??? ?
            code: |-
                name = ask 'What is your name?'
                song = ask 'Whould you like to hear a song?'
                birthday = ask 'Is today your birthday?'
                ???
                  print 'Happy Birthday to you!'
                  print 'Happy Birthday to you!'
                  print 'Happy Birthday. dear ' name
                  print 'Happy Birthday to you!'
            mp_choice_options:
            -   option: |-
                    ```
                    if birthday and song = 'yes'
                    ```
                feedback: Almost there
            -   option: |-
                    ```
                    if birthday = 'yes' and name = 'Hedy'
                    ```
                feedback: Hedy only sings for you if you like to hear a song
            -   option: |-
                    ```
                    if song = 'yes' and birthday = 'yes'
                    ```
                feedback: Super!
            -   option: |-
                    ```
                    if song = 'yes' or birthday = 'yes'
                    ```
                feedback: Hedy only sings if both answers are yes
            hint: Hedy sings if you want to hear a song and it's you birthday
            correct_answer: C
            question_score: '10'
        2:
            question_text: Which command is missing in the code at the place of the ??? ?
            code: |-
                menu = 'cheese', 'sausage rolls', 'cookies'
                diet = ask 'Do you have any dietary restrictions?'
                if diet = 'vegan' ??? diet = 'halal'
                    remove 'sausage rolls' from menu
            mp_choice_options:
            -   option: and
                feedback: You don't have to be vegan and muslim
            -   option: or
                feedback: Great thinking!
            -   option: +
                feedback: 'No'
            -   option: print
                feedback: 'No'
            hint: Neither vegans nor muslims can eat sausage rolls.
            correct_answer: B
            question_score: '10'
        3:
            question_text: Which output is given to a member without a discount code?
            code: |-
                member = ask 'Do you have a membership card?'
                discount = ask 'Do you have a discount code?'
                if member = 'yes' or discount = 'yes'
                    print 'You get a free apple pie!'
                else
                    print 'That will be 5 dollars please'
            mp_choice_options:
            -   option: You get a free pie!
                feedback: Great job!
            -   option: That will be 5 dollars please
                feedback: That is not true
            -   option: This code won't work, so there is no output
                feedback: There is nothing wrong with the code
            -   option: There is no way of knowing
                feedback: There is! Read the question carefully
            hint: Mind the command 'or' in line 3
            correct_answer: A
            question_score: '10'
        4:
            question_text: Which line of code should follow this line in rock-paper-scissors game?
            code: if computer_choice is 'rock' and your_choice is 'paper'
            mp_choice_options:
            -   option: print 'you win'
                feedback: You win!
            -   option: print 'you lose'
                feedback: You lose!
            -   option: print 'tie'
                feedback: It's only a tie if both choices are the same
            -   option: print 'try again'
                feedback: Try again!
            hint: Paper beats rock
            correct_answer: A
            question_score: '10'
        5:
            question_text: Which statement is true about this code?
            code: |-
                if name = 'Cinderella' and shoe_size = 38
                    print 'You are my one true love!'
            mp_choice_options:
            -   option: Every person with shoe size 38 is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   option: Every person named Cinderella is this prince's one true love
                feedback: The prince is a little more picky than that!
            -   option: Every person that is named Cinderella and has shoe size 38 is this prince's one true love
                feedback: Fantastic!
            -   option: Every person that's not named Cinderella and does not have shoe size 38 is this prince's one true love
                feedback: The prince is a little more picky than that!
            hint: Both statements have to be true
            correct_answer: C
            question_score: '10'
        6:
            question_text: Which statement about this code is true?
            code: |-
                print 'Let me guess which family member you are!'
                glasses = ask 'Do you wear glasses?'
                female = ask 'Are you female?'
                if glasses = 'yes' and female = 'yes'
                    print 'You must be Sophie!'
                if glasses = 'no' and female = 'yes'
                   print 'You must be Marleen!'
                if glasses = 'yes' and female = 'no'
                    print 'You must be Wouter!'
                if glasses = 'no' and female = 'no'
                    print 'You must be Michael!'
            mp_choice_options:
            -   option: Michael is a boy with glasses
                feedback: Try again
            -   option: Marleen is a girl with glasses
                feedback: Try again
            -   option: Wouter is a boy without glasses
                feedback: Try again
            -   option: Sophie is a girl with glasses
                feedback: Great job!
            hint: Take a good look! Or do you need glasses?
            correct_answer: D
            question_score: '10'
        7:
            question_text: Which statement is false?
            code: |-
                print 'Thank you for helping me take care of my pets'
                print 'Here is a program to help feed them'
                animal is ask 'What kind of animal are they?'
                color is ask 'What colour are they?'
                if animal is 'cat' and color = 'grey'
                    print 'That is Abby. She eats 3 scoops of cat nibbles'
                if animal is 'cat' and color = 'orange'
                    print 'That is Milo. He eats 4 scoops of cat nibbles'
                if animal is 'bird' or color is 'black'
                    print 'I fed them this moring! They do not need more food today'
                if animal is 'hamster' and color is 'brown'
                    print 'You can feed them a piece of carrot'
            mp_choice_options:
            -   option: The grey cat is called Abby
                feedback: This is true!
            -   option: Milo the orange cat eats 4 scoops of cat nibbles
                feedback: This is true
            -   option: The black hamster needs to be fed a piece of carrot
                feedback: Great job!
            -   option: The yellow bird was fed this morning
                feedback: This is true
            hint: Read the last 4 lines carefully
            correct_answer: C
            question_score: '10'
        8:
            question_text: What output do you get if you order popcorn but no drink?
            code: |-
                print 'Welcome to the movie theater'
                popcorn = ask 'Would you like some popcorn?'
                drink = ask 'Would you like a drink?'
                if popcorn = 'yes' and drink = 'yes'
                    print 'That will be 8 dollars please'
                if popcorn = 'no' and drink = 'yes'
                   print 'That will be 3 dollars please'
                if popcorn = 'yes' and drink = 'no'
                    print 'That will be 5 dollars please'
                if popcorn = 'no' and drink = 'no'
                    print 'Ok'
                print 'Enjoy the movie'
            mp_choice_options:
            -   option: |-
                    Welcome to the movie theater
                    That will be 8 dollars please
                    Enjoy the movie
                feedback: You have paid too much!
            -   option: |-
                    Welcome to the movie theater
                    That will be 5 dollars please
                    Enjoy the movie
                feedback: Amazing!
            -   option: |-
                    Welcome to the movie theater
                    That will be 3 dollars please
                    Enjoy the movie
                feedback: That's not enough money!
            -   option: |-
                    Welcome to the movie theater
                    Ok
                    Enjoy the movie
                feedback: You have to pay for your popcorn!
            hint: popcorn = yes and drink = no
            correct_answer: B
            question_score: '10'
        9:
            question_text: What is wrong with this code?
            code: |-
                1  chocolate = ask 'Would you like chocolate sauce on your ice cream?'
                2  sprinkles = ask 'Would you like sprinkles on your ice cream?'
                3  if chocolate and sprinkles = 'yes'
                4      print 'Ice cream with chocolate sauce and sprinkles, coming up!'
                5  if chocolate = 'yes' and sprinkles = 'no'
                6      print 'Ice cream with chocolate sauce, coming up!'
                7  if chocolate = 'no' and sprinkles = 'yes'
                8      print 'Ice cream with sprinkles, coming up'
                9  if chocolate = 'no' and sprinkles = 'no'
                10     print 'Just plain icecream, coming up!'
            mp_choice_options:
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: Correct!
            -   option: |-
                    Line 3 should be:
                    ```
                    {if} chocolate = 'no' {and} sprinkles = 'no'
                    ```
                feedback: This is not what I ordered!
            -   option: |-
                    Line 5 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'yes'
                    ```
                feedback: This is not what I ordered!
            -   option: |-
                    Line 7 should be:
                    ```
                    {if} chocolate = 'yes' {and} sprinkles = 'no'
                    ```
                feedback: This is not what I ordered!
            hint: There is a mistake in line 3
            correct_answer: A
            question_score: '10'
        10:
            question_text: Which command needs to be in line 8 at the place of the ??? ?
            code: |-
                print 'Welcome to the product finder of this supermarkt'
                item is ask 'What product are you looking for?'
                bakery = 'bread', 'buns', 'muffins'
                drinks = 'soda', 'water', 'lemonade'
                snacks = 'chips', 'nuts', 'dips'
                frozen = 'fries', 'icecream', 'pizza'
                fruit = 'bananas', 'apples', 'oranges'
                if item in snacks ??? item in drinks
                    print 'This item is in aile 3'
                if item in bakery or item in bakery
                    print 'This item in in the back of the store'
                if item in fruit
                    print 'The fruit is sold near the register'
            mp_choice_options:
            -   option: and
                feedback: There are no items that are both the list of snacks and the list of drinks
            -   option: or
                feedback: Great job!
            -   option: in
                feedback: 'No'
            -   option: if
                feedback: 'No'
            hint: The item is either in the list of snacks, or in the list of drinks
            correct_answer: B
            question_score: '10'
    14:
        1:
            question_text: Which symbol should be used on the blank?
            code: |-
                name _ {ask} 'Who are you?'
                {if} name == 'Hedy'
                    {print} 'Me too!'
            mp_choice_options:
            -   option: '`=>`'
                feedback: This is not a symbol.
            -   option: '`==`'
                feedback: We are not comparing anything, just asking.
            -   option: '`!=`'
                feedback: We are not comparing anything, just asking
            -   option: '`=`'
                feedback: Right!
            hint: We are not comparing anything, we are just asking a name.
            correct_answer: D
            question_score: '10'
        2:
            question_text: Which of these codes has used the correct = or == symbol?
            mp_choice_options:
            -   option: '{if} name = Hedy'
                feedback: 'No'
            -   option: '{if} age = 24'
                feedback: 'No'
            -   option: answer = {ask} 'What is your answer'
                feedback: Yes!
            -   option: answer == {ask} 'How are you doing?'
                feedback: 'No'
            hint: When you are comparing two answers you should use ==
            correct_answer: C
            question_score: '10'
        3:
            question_text: Which symbols should be filled in on the two blanks?
            code: |-
                guests = {ask} 'How many people are at the party?'
                {if} guests _ 130
                    {print} 'You can come in!'
                {if} guests _ 130
                    {print} 'Im sorry, the club is full. '
                    {print} 'You have to wait for a guest to leave'
            mp_choice_options:
            -   option: '`>` and `<`'
                feedback: That's not it
            -   option: '`=` and `>=`'
                feedback: That's not it
            -   option: '`<` and `>=`'
                feedback: You are right
            -   option: '`+` and `==`'
            hint: There are 130 people allowed in the club
            correct_answer: C
            question_score: '10'
            feedback: That's not it
        4:
            question_text: What's wrong with this code?
            code: |-
                price = 10
                money = {ask} How much money do you have?
                buy = {ask} 'Would you like to buy this teddy bear?'
                {if} money >= price and buy == 'yes'
                    {print} 'You can buy the bear!'
                {else}
                    {print} 'You cannot buy this bear!'
            mp_choice_options:
            -   option: In line 1 == should be used instead of =
                feedback: No that's not it
            -   option: Line 2 misses quotation marks
                feedback: You are correct
            -   option: In line 4 = should have been used instead of ==
                feedback: No that's not it
            -   option: In line 4 <= should have been used instead of >=
                feedback: No that's not it
            hint: The symbols are right
            correct_answer: B
            question_score: '10'
        5:
            question_text: Which symbol should be filled in on the blanks if the movie is suitable for kids for the age of 12 and up?
            code: |-
                age = {ask} 'How old are you?'
                ticket = {ask} 'Do you have a ticket?'
                {if} age _ and ticket == 'yes'
                    {print} 'You can enter the movie theater.'
                {else}
                    {print} 'You are not allowed to come in!'
            mp_choice_options:
            -   option: '`> 12`'
                feedback: 12 year olds are allowed too
            -   option: '`>= 12`'
                feedback: Great!
            -   option: '`< 12`'
                feedback: These kids are too young!
            -   option: '`<= 12`'
                feedback: These kids are too young
            hint: '> means greater than'
            correct_answer: B
            question_score: '10'
        6:
            question_text: How many times do you have to say you are annoyed before this annoying game stops?
            code: |-
                lives = 2
                {repeat} 10 times
                    {if} lives != 0
                        answer = {ask} 'Are you annoyed yet?'
                    {if} answer == 'yes'
                        lives = lives - 1
            mp_choice_options:
            -   option: 10 times
                feedback: It stops after 2 times
            -   option: 0 times
                feedback: It stops after 2 times
            -   option: 1 time
                feedback: It stops after 2 times
            -   option: 2 times
                feedback: That is correct
            hint: '!= means ''is not'''
            correct_answer: D
            question_score: '10'
        7:
            question_text: What should be filled in on the three blanks?
            code: |-
                {print} 'Guess which number'
                numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                number = numbers {at} {random}
                game = 'on'
                {for} i {in} {range} 1 {to} 10
                    {if} game == 'on'
                        guess = {ask} 'Which number do you think it is?'
                        {if} guess < number
                            {print} _
                        {if} guess > number
                            {print} _
                        {if} guess == number
                            {print} _
                            game = 'over'
            mp_choice_options:
            -   option: '`''Lower''` and `''Higher''` and `''You win!''`'
                feedback: That's not quite right.
            -   option: '`''Higher''` and `''Lower''` and `''You win!''`'
                feedback: You win!
            -   option: '`''You win!''` and `''Lower!''` and `''Higher''`'
                feedback: That's not quite right.
            -   option: '`''Lower!''` and `''You win!''` and `''Higher!''`'
                feedback: That's not quite right.
            hint: The last one should say you win.
            correct_answer: B
            question_score: '10'
        8:
            question_text: Which statement is true about this roller coaster?
            code: |-
                length = {ask} 'Please fill in your length in cm'
                {if} length < 120
                    {print} 'Sorry, you cannot go on this roller coaster.'
                {else}
                    {print} 'Enjoy the ride'
            mp_choice_options:
            -   option: You must be taller than 120 cm to go on the roller coaster
                feedback: True!
            -   option: You must be taller than 119 cm to go on the roller coaster
                feedback: If you are 120 cm you won't get in
            -   option: You must be shorter than 120 cm to go on the roller coaster
                feedback: '> means greater than'
            -   option: There are no length restrictions to go on the roller coaster
                feedback: There are.
            hint: '> means greater than'
            correct_answer: A
            question_score: '10'
        9:
            question_text: How many pieces of chocolate will give you a stomach ache according to this fitbit?
            code: |-
                chocolate = {ask} 'How many pieces of chocolate have you eaten?'
                  {if} chocolate <= 2
                      {print} 'That is a healthy amount'
                  {if} chocolate > 2 and chocolate =< 8
                      {print} 'That is a bit much'
                  {if} chocolate > 8
                      {print} 'You will get a stomach ache!'
            mp_choice_options:
            -   option: 1 or more
                feedback: 'No'
            -   option: 2 or more
                feedback: 'No'
            -   option: 8 or more
                feedback: Almost
            -   option: 9 or more
                feedback: Great!
            hint: '> 8 means more than 8'
            correct_answer: D
            question_score: '10'
        10:
            question_text: What should be filled in in the blanks?
            code: |-
                {print} 'Celle qui marque le plus de points gagne !'
                {if} points_joueuse_1 < points_joueuse_2
                    {print} _
            mp_choice_options:
            -   option: '''joueuse 1 gagne'''
                feedback: Regarde qui a le meilleur score !
            -   option: '''joueuse 2 gagne'''
                feedback: Oui!
            -   option: '''joueuse 2 perd'''
                feedback: Regarde qui a le meilleur score !
            -   option: '''C''est match nul'''
                feedback: No it's not, one player has a higher score
            hint: Tu gagnes la partie en ayant le plus de points
            correct_answer: B
            question_score: '10'
    15:
        1:
            question_text: 'Which symbol should be used on the blank? Tip: You must keep guessing until you get it right.'
            code: |-
                answer = 0
                while answer _ 'Amsterdam'
                    answer = ask 'What is the capital city of the Netherlands?'
                print 'You have given the correct answer'
            mp_choice_options:
            -   option: '`=!`'
                feedback: That is not right.
            -   option: '`==`'
                feedback: You don't have to keep guessing if you've given the right answer.
            -   option: '`!=`'
                feedback: Correct
            -   option: '`=`'
                feedback: That's not it
            hint: Keep guessing until you say Amsterdam
            correct_answer: C
            question_score: '10'
        2:
            question_text: Which of these codes has used the correct symbol(s)?
            mp_choice_options:
            -   option: |-
                    ```
                    {while} name = Hedy
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {while} age = 24
                    ```
                feedback: 'No'
            -   option: |-
                    ```
                    {while} time > 0
                    ```
                feedback: Yes!
            -   option: |-
                    ```
                    {while} answer == yes'
                    ```
                feedback: A quotation mark is missing
            hint: When you are comparing two answers you should use ==
            correct_answer: C
            question_score: '10'
        3:
            question_text: Which command should be filled in on the two blanks?
            code: |-
                _ age >= 18
                  print 'you are not allowed in this bar'
            mp_choice_options:
            -   option: '`{in}`'
                feedback: That's not it
            -   option: '`{while}`'
                feedback: You are right
            -   option: '`{for}`'
                feedback: That's not it
            -   option: '`{range}`'
                feedback: That's not it
            hint: You are not allowed in the bar as long as you are 17 or younger
            correct_answer: B
            question_score: '10'
        4:
            question_text: What's wrong with this code?
            code: |-
                options = 1, 2, 3, 4, 5, 6
                print 'Throw 6 as fast as you can!'
                thrown = 0
                tries = 0
                while thrown == 6
                    thrown = options at random
                    print 'You threw ' thrown
                    tries = tries + 1
                print 'Yes! You have thrown 6 in ' tries ' tries.'
            mp_choice_options:
            -   option: In line 1 == should be used instead of =
                feedback: No that's not it
            -   option: Line 2 misses quotation marks
                feedback: That's not right
            -   option: In line 5 if should have been used instead of while
                feedback: That's not it
            -   option: In line 5 != should have been used instead of ==
                feedback: You are correct
            hint: There is something wrong in line 5
            correct_answer: D
            question_score: '10'
        5:
            question_text: What should be placed on the blank to make this program work correctly?
            code: |-
                wetness = 10
                while wetness != 0
                    print 'Your hair is still wet, hair dryer on!'
                    sleep 1
                    clear
                    wetness _

                print 'All dry!'
            mp_choice_options:
            -   option: = wetness
                feedback: That will not change anything
            -   option: = wetness = 1
                feedback: You can't have two times = in one line
            -   option: = wetness - 1
                feedback: You are correct!
            -   option: = wetness + 1
                feedback: The program should count down
            hint: wetness should get less each time
            correct_answer: C
            question_score: '10'
        6:
            question_text: what is wrong with this code?
            code: |-
                lives = 100
                    {while} lives != 0
                    answer = {ask} 'Are you annoyed yet?'
                {if} answer == 'yes'
                    lives = lives - 1
            mp_choice_options:
            -   option: while should be if
                feedback: No that is not right
            -   option: if should be while
                feedback: No that is not right
            -   option: Line 3 should start with more indentation
                feedback: No that's not right
            -   option: Line 2 should start with less indentation
                feedback: That is correct
            hint: Look closely at the indentation
            correct_answer: D
            question_score: '10'
        7:
            question_text: How should this program be changed to that it works?
            code: |-
                {print} 'Guess which number'
                numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
                number = numbers {at} {random}
                game = 'on'
                {if} game == 'on'
                    guess = {ask} 'Which number do you think it is?'
                    {if} guess < number
                        {print} _
                    {if} guess > number
                        {print} _
                    {if} guess == number
                        {print} _
                        game = 'over'
            mp_choice_options:
            -   option: '... change the first {if} into a {while}'
                feedback: Perfect!
            -   option: '... change the second {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the third {if} into a {while}'
                feedback: That's not quite right.
            -   option: '... change the fourth {if} into a {while}'
                feedback: That's not quite right.
            hint: The last one should say you win.
            correct_answer: A
            question_score: '10'
        8:
            question_text: Which statement is true about this automated toilet system?
            code: |-
                while toilet == 'occupied'
                    lights = 'on'
                    air_freshener_sprays = 'yes'
                    sleep 60
                else
                    lights = 'off'
            mp_choice_options:
            -   option: The lights and air freshener will turn off after 1 minute
                feedback: False!
            -   option: The air freshener sprays once every minute and the lights stay on the whole time while you are on the toilet
                feedback: Great job
            -   option: The air freshener sprays once you leave the toilet.
                feedback: It only sprays when you're in there.
            -   option: The lights will always stay on.
                feedback: That wouldn't be right.
            hint: The block after the while command keeps happening while the toilet is occupied.
            correct_answer: B
            question_score: '10'
        9:
            question_text: What will the diet app say if you have eaten 1600 calories today?
            code: |-
                chocolate = {ask} 'How many calories have you eaten today?'
                  {while} calories <= 1000
                      {print} 'You could eat some more'
                  {while} calories > 1000 and calories =< 2000
                      {print} 'That is alright'
                  {while} calories > 2000
                      {print} 'You have had enough for today'
            mp_choice_options:
            -   option: Nothing. 1600 is not programmed into the app.
                feedback: 'No'
            -   option: you could eat some more
                feedback: 'No'
            -   option: That is alright
                feedback: Yes!
            -   option: You have eaten enough for today
                feedback: 'No'
            hint: 1600 is between 1000 and 2000
            correct_answer: C
            question_score: '10'
        10:
            question_text: 'What should be filled in in the blanks? Tip: the player with the most points is in the lead.'
            code: |-
                name_player_1 = {ask} 'Name player 1:'
                name_player_2 = {ask} 'Name player 2:'
                {while} points_player_1 > points_player_2
                    {print} _ ' is in the lead right now!'
            mp_choice_options:
            -   option: name_player_1
                feedback: You are right!
            -   option: name_player_2
                feedback: No they are losing!
            -   option: points_player_1
                feedback: You should fill in a name, not a number
            -   option: points_player_2
                feedback: You should fill in a name, not a number
            hint: You win the game by having the most points. Your name should appear on the screen
            correct_answer: A
            question_score: '10'
